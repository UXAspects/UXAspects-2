(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"/sKy":function(n,a){n.exports={snippet:'<span class="token selector">.virtual-scroll-container</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 420px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-cell</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #eee<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-cell .employee-details</span> <span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> 1 0 auto<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-cell .employee-details .employee-name</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-cell .employee-details .employee-department</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">margin-right</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-cell .employee-details .employee-email</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-scroll-loading</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-scroll-loading > .spinner</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 1em 0 0.5em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-scroll-container .virtual-scroll-load-more</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".virtual-scroll-container {\n    width: 420px;\n    height: 250px;\n    border: 1px solid #ddd;\n}\n\n.virtual-scroll-container .virtual-cell {\n    display: flex;\n    padding: 10px 20px;\n    border-bottom: 1px solid #eee;\n}\n\n.virtual-scroll-container .virtual-cell .employee-details {\n    flex: 1 0 auto;\n    color: #888;\n}\n\n.virtual-scroll-container .virtual-cell .employee-details .employee-name {\n    color: black;\n}\n\n.virtual-scroll-container .virtual-cell .employee-details .employee-department {\n    font-size: 90%;\n    font-weight: 300;\n    margin-right: 1em;\n}\n\n.virtual-scroll-container .virtual-cell .employee-details .employee-email {\n    font-size: 90%;\n    font-weight: 300;\n}\n\n.virtual-scroll-container .virtual-scroll-loading {\n    display: flex;\n    align-items: center;\n    padding: 10px 20px;\n    font-style: italic;\n}\n\n.virtual-scroll-container .virtual-scroll-loading > .spinner {\n    margin: 0 1em 0 0.5em;\n}\n\n.virtual-scroll-container .virtual-scroll-load-more {\n    width: 100%;\n    padding: 10px 20px;\n    outline: none;\n}"}},"4Swj":function(n,a){n.exports={snippet:'<span class="token selector">.employee-list</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-list > ol</span> <span class="token punctuation">{</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-list > ol > li</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">li.employee-item</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #eee<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-details</span> <span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> 1 0 auto<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-name</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-department</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">margin-right</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-email</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-load-more</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-loading</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.employee-loading > .spinner</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 1em 0 0.5em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".employee-list {\n    width: 100%;\n    height: 250px;\n    overflow-y: auto;\n    border: 1px solid #ddd;\n}\n\n.employee-list > ol {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n.employee-list > ol > li {\n    width: 100%;\n}\n\nli.employee-item {\n    display: flex;\n    padding: 10px 20px;\n    border-bottom: 1px solid #eee;\n}\n\n.employee-details {\n    flex: 1 0 auto;\n    color: #888;\n}\n\n.employee-name {\n    color: black;\n}\n\n.employee-department {\n    font-size: 90%;\n    font-weight: 300;\n    margin-right: 1em;\n}\n\n.employee-email {\n    font-size: 90%;\n    font-weight: 300;\n}\n\n.employee-load-more {\n    width: 100%;\n    padding: 10px 20px;\n}\n\n.employee-loading {\n    display: flex;\n    align-items: center;\n    padding: 10px 20px;\n    font-style: italic;\n}\n\n.employee-loading > .spinner {\n    margin: 0 1em 0 0.5em;\n}\n"}},"5jeJ":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-6 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n            <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Filter the employee list<span class="token punctuation">"</span></span>\n            <span class="token attr-name">aria-controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-infinite-scroll-list<span class="token punctuation">"</span></span>\n            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n            <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Filter<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[ngModel]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>filterText | async<span class="token punctuation">"</span></span> <span class="token attr-name">(ngModelChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>filterText.next($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row m-t-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-6 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-infinite-scroll-list<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-list<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[uxInfiniteScroll]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadCallback<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[(collection)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadedEmployees<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[filter]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>debouncedFilterText | async<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[pageSize]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pageSize<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[loadOnScroll]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadOnScroll<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(loading)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading = true<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(loaded)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading = false<span class="token punctuation">"</span></span>\n            <span class="token attr-name">(loadError)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading = false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">[attr.aria-busy]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Employee list with infinite scrolling<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let employee of loadedEmployees<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>totalItems<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee.position<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{employee.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-department<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>({{employee.department}})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{employee.email}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{employee.id}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*uxInfiniteScrollLoadButton</span>\n                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Load more items into the list<span class="token punctuation">"</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link button-primary employee-load-more<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Load more<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*uxInfiniteScrollLoading</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\n    <div class="col-md-6 col-sm-12">\n        <input type="text"\n            aria-label="Filter the employee list"\n            aria-controls="employee-infinite-scroll-list"\n            class="form-control"\n            placeholder="Filter"\n            [ngModel]="filterText | async" (ngModelChange)="filterText.next($event)">\n    </div>\n</div>\n<div class="row m-t-sm">\n    <div class="col-md-6 col-sm-12">\n\n        <div id="employee-infinite-scroll-list" class="employee-list"\n            [uxInfiniteScroll]="loadCallback"\n            [(collection)]="loadedEmployees"\n            [filter]="debouncedFilterText | async"\n            [pageSize]="pageSize"\n            [loadOnScroll]="loadOnScroll"\n            (loading)="loading = true"\n            (loaded)="loading = false"\n            (loadError)="loading = false">\n\n            <ol [attr.aria-busy]="loading" aria-label="Employee list with infinite scrolling">\n                <li *ngFor="let employee of loadedEmployees"\n                    [attr.aria-setsize]="totalItems"\n                    [attr.aria-posinset]="employee.position"\n                    class="employee-item">\n\n                    <div class="employee-details">\n                        <div>\n                            <span class="employee-name">{{employee.name}}</span>\n                            <span class="employee-department">({{employee.department}})</span>\n                        </div>\n                        <div>\n                            <span class="employee-email">{{employee.email}}</span>\n                        </div>\n                    </div>\n                    <div class="employee-id">{{employee.id}}</div>\n\n                </li>\n            </ol>\n\n            <button *uxInfiniteScrollLoadButton\n                type="button"\n                aria-description="Load more items into the list"\n                class="btn btn-link button-primary employee-load-more">Load more</button>\n\n            <div *uxInfiniteScrollLoading class="employee-loading">\n                <div class="spinner spinner-accent spinner-bounce-middle"></div>\n                <div>Loading...</div>\n            </div>\n\n        </div>\n\n    </div>\n</div>'}},"7exx":function(n,a,s){var t={"./app.css":"R0G9","./app.html":"Dzjf","./app.ts":"gM0x","./async.html":"Xr7+","./context.html":"eFiv"};function p(n){var a=e(n);return s(a)}function e(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="7exx"},BJCU:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> LiveAnnouncer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/cdk/a11y\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BehaviorSubject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> debounceTime <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> chance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token constant">DEPARTMENTS</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Finance\'</span><span class="token punctuation">,</span> <span class="token string">\'Operations\'</span><span class="token punctuation">,</span> <span class="token string">\'Investor Relations\'</span><span class="token punctuation">,</span> <span class="token string">\'Technical\'</span><span class="token punctuation">,</span> <span class="token string">\'Auditing\'</span><span class="token punctuation">,</span> <span class="token string">\'Labs\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    filterText <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BehaviorSubject</span><span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    debouncedFilterText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>filterText<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">debounceTime</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    allEmployees<span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    loadedEmployees<span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    loadCallback <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    loadOnScroll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    pageSize <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>\n    totalItems <span class="token operator">=</span> <span class="token number">111</span><span class="token punctuation">;</span>\n\n    <span class="token function">load</span><span class="token punctuation">(</span>pageNum<span class="token operator">:</span> number<span class="token punctuation">,</span> pageSize<span class="token operator">:</span> number<span class="token punctuation">,</span> filter<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_liveAnnouncer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token string">\'Loading more items at the end of the list, please wait.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> pageStart <span class="token operator">=</span> pageNum <span class="token operator">*</span> pageSize<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> newItems <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allEmployees\n                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isFilterMatch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>pageStart<span class="token punctuation">,</span> pageStart <span class="token operator">+</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>_liveAnnouncer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>newItems<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> items loaded at the end of the list.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token function">resolve</span><span class="token punctuation">(</span>newItems<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> promise<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">isFilterMatch</span><span class="token punctuation">(</span>e<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> normalisedFilter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>filterText<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>normalisedFilter<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> _liveAnnouncer<span class="token operator">:</span> LiveAnnouncer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">111</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> name <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>allEmployees<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                id<span class="token operator">:</span> i<span class="token punctuation">,</span>\n                name<span class="token operator">:</span> name<span class="token punctuation">,</span>\n                department<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">pickone</span><span class="token punctuation">(</span><span class="token constant">DEPARTMENTS</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                email<span class="token operator">:</span> name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">,</span> <span class="token string">\'.\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\'@business.com\'</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Component } from '@angular/core';\nimport 'chance';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst chance = new Chance();\n\nconst DEPARTMENTS = ['Finance', 'Operations', 'Investor Relations', 'Technical', 'Auditing', 'Labs'];\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    filterText = new BehaviorSubject<string>('');\n    debouncedFilterText = this.filterText.pipe(debounceTime(500));\n    allEmployees: any[] = [];\n    loadedEmployees: any[] = [];\n    loadCallback = this.load.bind(this);\n    loadOnScroll = true;\n    loading = false;\n    pageSize = 20;\n    totalItems = 111;\n\n    load(pageNum: number, pageSize: number, filter: any): Promise<any[]> {\n        this._liveAnnouncer.announce('Loading more items at the end of the list, please wait.');\n        let promise = new Promise<any[]>((resolve, reject) => {\n            setTimeout(() => {\n                const pageStart = pageNum * pageSize;\n                const newItems = this.allEmployees\n                    .filter((e) => this.isFilterMatch(e))\n                    .slice(pageStart, pageStart + pageSize);\n                this._liveAnnouncer.announce(`${newItems.length} items loaded at the end of the list.`);\n                resolve(newItems);\n            }, 2000);\n        });\n\n        return promise;\n    }\n\n    isFilterMatch(e: any): boolean {\n        const normalisedFilter = this.filterText.getValue().toLowerCase();\n        return (e.name.toLowerCase().indexOf(normalisedFilter) >= 0);\n    }\n\n    constructor(private _liveAnnouncer: LiveAnnouncer) {\n        for (let i = 0; i < 111; i += 1) {\n            const name = chance.name();\n            this.allEmployees.push({\n                id: i,\n                name: name,\n                department: chance.pickone(DEPARTMENTS),\n                email: name.toLowerCase().replace(' ', '.') + '@business.com'\n            });\n        }\n    }\n}"}},Dzjf:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>table<span class="token punctuation">"</span></span> <span class="token attr-name">uxFixedHeaderTable</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>identity-column<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Department<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">uxVirtualForContainer</span> <span class="token attr-name">uxTabbableList</span> <span class="token attr-name">[wrap]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">*uxVirtualFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let employee of employees; let index = index<span class="token punctuation">"</span></span>\n            <span class="token attr-name">uxTabbableListItem</span>\n            <span class="token attr-name">[key]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee.id<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employees.length<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>identity-column<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ employee.id }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ employee.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ employee.email }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>{{ employee.department }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-table-action<span class="token punctuation">"</span></span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>isLoading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-loading-indicator<span class="token punctuation">"</span></span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                Loading...\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-table-action<span class="token punctuation">"</span></span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!isLoading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-load-button<span class="token punctuation">"</span></span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link button-primary btn-block<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadNextPage()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    Load More\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>',example:'<table class="table" uxFixedHeaderTable>\n    <thead>\n        <tr>\n            <th class="identity-column">Id</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Department</th>\n        </tr>\n    </thead>\n\n    <tbody uxVirtualForContainer uxTabbableList [wrap]="false">\n\n        <tr *uxVirtualFor="let employee of employees; let index = index"\n            uxTabbableListItem\n            [key]="employee.id"\n            [attr.aria-posinset]="index"\n            [attr.aria-setsize]="employees.length">\n            <td class="identity-column">{{ employee.id }}</td>\n            <td>{{ employee.name }}</td>\n            <td>{{ employee.email }}</td>\n            <td>{{ employee.department }}</td>\n        </tr>\n\n        <tr class="virtual-table-action" *ngIf="isLoading">\n            <td class="virtual-loading-indicator" colspan="4">\n                <div class="spinner spinner-accent spinner-bounce-middle"></div>\n                Loading...\n            </td>\n        </tr>\n\n        <tr class="virtual-table-action" *ngIf="!isLoading">\n            <td class="virtual-load-button" colspan="4">\n                <button class="btn btn-link button-primary btn-block"\n                        (click)="loadNextPage()">\n                    Load More\n                </button>\n            </td>\n        </tr>\n\n    </tbody>\n\n</table>'}},EUi8:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> LiveAnnouncer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/cdk/a11y\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Subject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token constant">DEPARTMENTS</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Finance\'</span><span class="token punctuation">,</span> <span class="token string">\'Operations\'</span><span class="token punctuation">,</span> <span class="token string">\'Investor Relations\'</span><span class="token punctuation">,</span> <span class="token string">\'Technical\'</span><span class="token punctuation">,</span> <span class="token string">\'Auditing\'</span><span class="token punctuation">,</span> <span class="token string">\'Labs\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    loadOnScroll<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    employees<span class="token operator">:</span> Subject<span class="token operator">&lt;</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject</span><span class="token operator">&lt;</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    pageSize <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>\n    totalPages <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    totalItems<span class="token operator">:</span> number<span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">private</span> _liveAnnouncer<span class="token operator">:</span> LiveAnnouncer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>totalItems <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>totalPages<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">loadPage</span><span class="token punctuation">(</span>pageNumber<span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">const</span> startIdx <span class="token operator">=</span> pageNumber <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> endIdx <span class="token operator">=</span> startIdx <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> employees<span class="token operator">:</span> Employee<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_liveAnnouncer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token string">\'Loading more items, please wait.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// generate sample employee data</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> startIdx<span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> endIdx<span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            <span class="token keyword">const</span> name <span class="token operator">=</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            employees<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                id<span class="token operator">:</span> idx<span class="token punctuation">,</span>\n                name<span class="token operator">:</span> name<span class="token punctuation">,</span>\n                email<span class="token operator">:</span> name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">\' \'</span><span class="token punctuation">,</span> <span class="token string">\'.\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\'@business.com\'</span><span class="token punctuation">,</span>\n                department<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">pickone</span><span class="token punctuation">(</span><span class="token constant">DEPARTMENTS</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// push the next batch of employees to the subject - (delay to simulate server time)</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>employees<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>employees<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">this</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_liveAnnouncer<span class="token punctuation">.</span><span class="token function">announce</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>employees<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> items loaded.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// impose a limit of 10 pages</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>pageNumber <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>employees<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    email<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    department<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Component } from '@angular/core';\nimport 'chance';\nimport { Subject } from 'rxjs';\n\nconst DEPARTMENTS = ['Finance', 'Operations', 'Investor Relations', 'Technical', 'Auditing', 'Labs'];\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    loadOnScroll: boolean = true;\n    employees: Subject<Employee[]> = new Subject<Employee[]>();\n    loading = false;\n    pageSize = 2000;\n    totalPages = 10;\n    totalItems: number;\n\n    constructor(private _liveAnnouncer: LiveAnnouncer) {\n        this.totalItems = this.pageSize * this.totalPages;\n    }\n\n    loadPage(pageNumber: number): void {\n\n        const startIdx = pageNumber * this.pageSize;\n        const endIdx = startIdx + this.pageSize;\n        const employees: Employee[] = [];\n\n        this.loading = true;\n        this._liveAnnouncer.announce('Loading more items, please wait.');\n\n        // generate sample employee data\n        for (let idx = startIdx; idx < endIdx; idx++) {\n\n            const name = chance.name();\n\n            employees.push({\n                id: idx,\n                name: name,\n                email: name.toLowerCase().replace(' ', '.') + '@business.com',\n                department: chance.pickone(DEPARTMENTS)\n            });\n        }\n\n        // push the next batch of employees to the subject - (delay to simulate server time)\n        setTimeout(() => {\n            this.employees.next(employees);\n\n            this.loading = false;\n            this._liveAnnouncer.announce(`${employees.length} items loaded.`);\n\n            // impose a limit of 10 pages\n            if (pageNumber === 10) {\n                this.employees.complete();\n            }\n        }, 1000);\n    }\n}\n\ninterface Employee {\n    id: number;\n    name: string;\n    email: string;\n    department: string;\n}"}},Gtyo:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*uxInfiniteScrollLoading</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>'}},R0G9:function(n,a){n.exports={snippet:'<span class="token selector">.table > tbody</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 750px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.identity-column</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-loading-indicator</span> <span class="token punctuation">{</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-loading-indicator > .spinner</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0.3em 1em 0.3em 0.5em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-load-button</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-load-button > .btn</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.virtual-table-action:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".table > tbody {\n    height: 750px;\n}\n\n.identity-column {\n    width: 100px;\n    flex: none;\n}\n\n.virtual-loading-indicator {\n    text-align: center;\n    justify-content: center;\n    font-style: italic;\n}\n\n.virtual-loading-indicator > .spinner {\n    margin: 0.3em 1em 0.3em 0.5em;\n}\n\n.virtual-load-button {\n    padding: 0;\n}\n\n.virtual-load-button > .btn {\n    height: 100%;\n    padding: 8px;\n}\n\n.virtual-table-action:hover {\n    background-color: transparent;\n}"}},"Xr7+":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*uxVirtualFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let item of items$ | async<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div *uxVirtualFor="let item of items$ | async"></div>'}},YSkI:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*uxInfiniteScrollLoadButton</span>\n    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n    <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Load more items into the list<span class="token punctuation">"</span></span>\n    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link button-primary employee-load-more<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Load more<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>'}},b5KM:function(n,a,s){var t={"./app.css":"4Swj","./app.html":"5jeJ","./app.ts":"BJCU","./loadMore.snippet.html":"YSkI","./loading.snippet.html":"Gtyo"};function p(n){var a=e(n);return s(a)}function e(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="b5KM"},eFiv:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*uxVirtualFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let item of items; let index = index; let first = first<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div *uxVirtualFor="let item of items; let index = index; let first = first"></div>'}},gM0x:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    <span class="token comment">/** Store the current loading state */</span>\n    isLoading<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Store the list of employees */</span>\n    employees<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Store the current page */</span>\n    <span class="token keyword">private</span> _page<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// load the first page</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">load</span><span class="token punctuation">(</span>page<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// update the loading state</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>isLoading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// create some new employees</span>\n        <span class="token keyword">const</span> employees<span class="token operator">:</span> Employee<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;=</span> <span class="token number">5000</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            employees<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                id<span class="token operator">:</span> idx <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">5000</span> <span class="token operator">*</span> page<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                name<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                email<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                department<span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">pickone</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n                    <span class="token string">\'Finance\'</span><span class="token punctuation">,</span> <span class="token string">\'Operations\'</span><span class="token punctuation">,</span> <span class="token string">\'Investor Relations\'</span><span class="token punctuation">,</span> <span class="token string">\'Technical\'</span><span class="token punctuation">,</span> <span class="token string">\'Auditing\'</span><span class="token punctuation">,</span> <span class="token string">\'Labs\'</span>\n                <span class="token punctuation">]</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// add delay to simulate server loading</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>employees <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>employees<span class="token punctuation">,</span> <span class="token operator">...</span>employees<span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>isLoading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">loadNextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>_page<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> number<span class="token punctuation">;</span>\n    name<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    email<span class="token operator">:</span> string<span class="token punctuation">;</span>\n    department<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport 'chance';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    /** Store the current loading state */\n    isLoading: boolean = false;\n\n    /** Store the list of employees */\n    employees: ReadonlyArray<Employee> = [];\n\n    /** Store the current page */\n    private _page: number = 0;\n\n    constructor() {\n        // load the first page\n        this.load();\n    }\n\n    load(page: number = 0): void {\n\n        // update the loading state\n        this.isLoading = true;\n\n        // create some new employees\n        const employees: Employee[] = [];\n\n        for (let idx = 1; idx <= 5000; idx++) {\n            employees.push({\n                id: idx + (5000 * page),\n                name: chance.name(),\n                email: chance.email(),\n                department: chance.pickone([\n                    'Finance', 'Operations', 'Investor Relations', 'Technical', 'Auditing', 'Labs'\n                ])\n            });\n        }\n\n        // add delay to simulate server loading\n        setTimeout(() => {\n            this.employees = [...this.employees, ...employees];\n            this.isLoading = false;\n        }, 1000);\n    }\n\n    loadNextPage(): void {\n        this.load(++this._page);\n    }\n}\n\nexport interface Employee {\n    id: number;\n    name: string;\n    email: string;\n    department: string;\n}"}},gkt0:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-virtual-scroll</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-scroll-container<span class="token punctuation">"</span></span>\n    <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[attr.aria-busy]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span>\n    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Employee list with virtual scrolling<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[collection]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employees<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[cellHeight]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>63<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[loadOnScroll]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadOnScroll<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(loading)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loadPage($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*uxVirtualScrollCell</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let cell = cell; let index = index<span class="token punctuation">"</span></span>\n        <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listitem<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[attr.aria-setsize]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>totalItems<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[attr.aria-posinset]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-cell<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{cell.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-department<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>({{cell.department}})<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{cell.email}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>employee-id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{cell.id}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*uxVirtualScrollLoadButton</span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Load more items into the list<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link button-primary virtual-scroll-load-more<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Load more\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*uxVirtualScrollLoading</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>virtual-scroll-loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>spinner spinner-accent spinner-bounce-middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-virtual-scroll</span><span class="token punctuation">></span></span>',example:'<ux-virtual-scroll class="virtual-scroll-container"\n    role="list"\n    [attr.aria-busy]="loading"\n    aria-label="Employee list with virtual scrolling"\n    [collection]="employees"\n    [cellHeight]="63"\n    [loadOnScroll]="loadOnScroll"\n    (loading)="loadPage($event)">\n\n    <div *uxVirtualScrollCell="let cell = cell; let index = index"\n        role="listitem"\n        [attr.aria-setsize]="totalItems"\n        [attr.aria-posinset]="index"\n        class="virtual-cell">\n\n        <div class="employee-details">\n            <div>\n                <span class="employee-name">{{cell.name}}</span>\n                <span class="employee-department">({{cell.department}})</span>\n            </div>\n            <div>\n                <span class="employee-email">{{cell.email}}</span>\n            </div>\n        </div>\n        <div class="employee-id">{{cell.id}}</div>\n\n    </div>\n\n    <button *uxVirtualScrollLoadButton\n        type="button"\n        aria-description="Load more items into the list"\n        class="btn btn-link button-primary virtual-scroll-load-more">\n        Load more\n    </button>\n\n    <div *uxVirtualScrollLoading class="virtual-scroll-loading">\n        <div class="spinner spinner-accent spinner-bounce-middle"></div>\n        <div>Loading...</div>\n    </div>\n\n</ux-virtual-scroll>'}},uJCl:function(n,a,s){var t={"./app.css":"/sKy","./app.html":"gkt0","./app.ts":"EUi8"};function p(n){var a=e(n);return s(a)}function e(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="uJCl"},woVz:function(n,a,s){"use strict";s.r(a);var t,p=s("9LEk"),e=s("Valr"),o=s("QJY3"),c=s("DUip"),l=s("7Q8i"),i=s("XtaT"),u=s("T/2f"),r=s("YZ8U"),k=s("Gi3i"),d=(s("nmfD"),s("26FU")),m=s("AVdU"),g=s("yHOM"),b=s("TYT/"),y=s("+gXg"),h=s("2RDK"),f=s("COk8"),S=(t=function(n,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])})(n,a)},function(n,a){function s(){this.constructor=n}t(n,a),n.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)});function v(n,a){if(1&n&&(b.ac(0,"li",39),b.Sc(1,"\n\n                    "),b.ac(2,"div",40),b.Sc(3,"\n                        "),b.ac(4,"div"),b.Sc(5,"\n                            "),b.ac(6,"span",41),b.Sc(7),b.Zb(),b.Sc(8,"\n                            "),b.ac(9,"span",42),b.Sc(10),b.Zb(),b.Sc(11,"\n                        "),b.Zb(),b.Sc(12,"\n                        "),b.ac(13,"div"),b.Sc(14,"\n                            "),b.ac(15,"span",43),b.Sc(16),b.Zb(),b.Sc(17,"\n                        "),b.Zb(),b.Sc(18,"\n                    "),b.Zb(),b.Sc(19,"\n                    "),b.ac(20,"div",44),b.Sc(21),b.Zb(),b.Sc(22,"\n\n                "),b.Zb()),2&n){var s=a.$implicit,t=b.mc();b.Db("aria-setsize",t.totalItems)("aria-posinset",s.position),b.Cb(7),b.Tc(s.name),b.Cb(3),b.Uc("(",s.department,")"),b.Cb(6),b.Tc(s.email),b.Cb(5),b.Tc(s.id)}}function x(n,a){1&n&&(b.ac(0,"button",45),b.Sc(1,"Load more"),b.Zb())}function w(n,a){1&n&&(b.ac(0,"div",46),b.Sc(1,"\n                "),b.Vb(2,"div",47),b.Sc(3,"\n                "),b.ac(4,"div"),b.Sc(5,"Loading..."),b.Zb(),b.Sc(6,"\n            "),b.Zb())}var Z=new Chance,C=["Finance","Operations","Investor Relations","Technical","Auditing","Labs"],T=function(n){function a(a){var t=n.call(this,s("b5KM"))||this;t._liveAnnouncer=a,t.filterText=new d.a(""),t.debouncedFilterText=t.filterText.pipe(Object(k.a)(500)),t.allEmployees=[],t.loadedEmployees=[],t.loadCallback=t.load.bind(t),t.loadOnScroll=!0,t.loading=!1,t.pageSize=20,t.totalItems=111,t.playground={files:{"app.component.ts":t.snippets.raw.appTs,"app.component.html":t.snippets.raw.appHtml,"app.component.css":t.snippets.raw.appCss},modules:[{imports:["InfiniteScrollModule","CheckboxModule","NumberPickerModule","AccordionModule"],library:"@ux-aspects/ux-aspects"},{imports:["A11yModule"],library:"@angular/cdk/a11y"}]};for(var p=0;p<t.totalItems;p+=1){var e=Z.name();t.allEmployees.push({id:p,name:e,department:Z.pickone(C),email:e.toLowerCase().replace(" ",".")+"@business.com",position:p})}return t}return S(a,n),a.prototype.load=function(n,a,s){var t=this;return this._liveAnnouncer.announce("Loading more items at the end of the list, please wait."),new Promise((function(s,p){setTimeout((function(){var p=n*a,e=t.allEmployees.filter((function(n){return t.isFilterMatch(n)})).slice(p,p+a);t._liveAnnouncer.announce(e.length+" items loaded at the end of the list."),s(e)}),2e3)}))},a.prototype.isFilterMatch=function(n){var a=this.filterText.getValue().toLowerCase();return n.name.toLowerCase().indexOf(a)>=0},a.\u0275fac=function(n){return new(n||a)(b.Ub(p.e))},a.\u0275cmp=b.Ob({type:a,selectors:[["uxd-components-infinite-scroll"]],features:[b.zb],decls:271,vars:20,consts:[[1,"row"],[1,"col-md-6","col-sm-12"],["type","text","aria-label","Filter the employee list","aria-controls","employee-infinite-scroll-list","placeholder","Filter",1,"form-control",3,"ngModel","ngModelChange"],[1,"row","m-t-sm"],["id","employee-infinite-scroll-list",1,"employee-list",3,"uxInfiniteScroll","collection","filter","pageSize","loadOnScroll","collectionChange","loading","loaded","loadError"],["aria-label","Employee list with infinite scrolling"],["class","employee-item",4,"ngFor","ngForOf"],["type","button","aria-description","Load more items into the list","class","btn btn-link button-primary employee-load-more",4,"uxInfiniteScrollLoadButton"],["class","employee-loading",4,"uxInfiniteScrollLoading"],[1,"uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[3,"value","valueChange"],["for","pageSize"],["min","1","max","1000",3,"value","valueChange"],["tableTitle","Inputs"],["uxd-api-property","","name","uxInfiniteScroll","type","InfiniteScrollLoadFunction"],["uxd-api-property","","name","collection","type","any[]"],["uxd-api-property","","name","filter","type","any"],["uxd-api-property","","name","pageSize","type","number","defaultValue","20"],["uxd-api-property","","name","loadOnScroll","type","boolean","defaultValue","true"],["uxd-api-property","","name","scrollElement","type","ElementRef | Element"],["tableTitle","Outputs"],["uxd-api-property","","name","collectionChange","type","any[]"],["uxd-api-property","","name","loading","type","EventEmitter<InfiniteScrollLoadingEvent>"],["uxd-api-property","","name","loaded","type","EventEmitter<InfiniteScrollLoadedEvent>"],["uxd-api-property","","name","loadError","type","EventEmitter<InfiniteScrollLoadErrorEvent>"],["uxd-api-property","","name","loadNextPage","type","function"],["uxd-api-property","","name","reset","type","function"],["uxd-api-property","","name","reload","type","function"],["uxd-api-property","","name","reloadPage","type","function"],["language","html",3,"content"],["href","https://material.angular.io/cdk/a11y/api#LiveAnnouncer"],[3,"minimal"],["heading","HTML"],["heading","TypeScript"],["language","javascript",3,"content"],["heading","CSS"],["language","css",3,"content"],[1,"employee-item"],[1,"employee-details"],[1,"employee-name"],[1,"employee-department"],[1,"employee-email"],[1,"employee-id"],["type","button","aria-description","Load more items into the list",1,"btn","btn-link","button-primary","employee-load-more"],[1,"employee-loading"],[1,"spinner","spinner-accent","spinner-bounce-middle"]],template:function(n,a){1&n&&(b.ac(0,"div",0),b.Sc(1,"\n    "),b.ac(2,"div",1),b.Sc(3,"\n        "),b.ac(4,"input",2),b.ic("ngModelChange",(function(n){return a.filterText.next(n)})),b.nc(5,"async"),b.Zb(),b.Sc(6,"\n    "),b.Zb(),b.Sc(7,"\n"),b.Zb(),b.Sc(8,"\n"),b.ac(9,"div",3),b.Sc(10,"\n    "),b.ac(11,"div",1),b.Sc(12,"\n\n        "),b.ac(13,"div",4),b.ic("collectionChange",(function(n){return a.loadedEmployees=n}))("loading",(function(){return a.loading=!0}))("loaded",(function(){return a.loading=!1}))("loadError",(function(){return a.loading=!1})),b.nc(14,"async"),b.Sc(15,"\n\n            "),b.ac(16,"ol",5),b.Sc(17,"\n                "),b.Qc(18,v,23,6,"li",6),b.Sc(19,"\n            "),b.Zb(),b.Sc(20,"\n\n            "),b.Qc(21,x,2,0,"button",7),b.Sc(22,"\n\n            "),b.Qc(23,w,7,0,"div",8),b.Sc(24,"\n\n        "),b.Zb(),b.Sc(25,"\n\n    "),b.Zb(),b.Sc(26,"\n"),b.Zb(),b.Sc(27,"\n"),b.ac(28,"div",9),b.Sc(29,"\n    "),b.ac(30,"ux-accordion"),b.Sc(31,"\n        "),b.ac(32,"ux-accordion-panel",10),b.Sc(33,"\n            "),b.ac(34,"div",11),b.Sc(35,"\n                "),b.ac(36,"div",1),b.Sc(37,"\n                    "),b.ac(38,"ux-checkbox",12),b.ic("valueChange",(function(n){return a.loadOnScroll=n})),b.Sc(39,"loadOnScroll"),b.Zb(),b.Sc(40,"\n                "),b.Zb(),b.Sc(41,"\n            "),b.Zb(),b.Sc(42,"\n            "),b.ac(43,"div",11),b.Sc(44,"\n                "),b.ac(45,"div",1),b.Sc(46,"\n                    "),b.ac(47,"label",13),b.Sc(48,"pageSize"),b.Zb(),b.Sc(49,"\n                    "),b.ac(50,"ux-number-picker",14),b.ic("valueChange",(function(n){return a.pageSize=n})),b.Zb(),b.Sc(51,"\n                "),b.Zb(),b.Sc(52,"\n            "),b.Zb(),b.Sc(53,"\n        "),b.Zb(),b.Sc(54,"\n    "),b.Zb(),b.Sc(55,"\n"),b.Zb(),b.Sc(56,"\n\n"),b.Vb(57,"hr"),b.Sc(58,"\n\n"),b.ac(59,"p"),b.Sc(60,"When displaying long lists of data it is often preferable to add paging to the list. By using paging, data is loaded in small\n    blocks improving load times and reducing the workload on the server providing the data."),b.Zb(),b.Sc(61,"\n\n"),b.ac(62,"p"),b.Sc(63,"The\n    "),b.ac(64,"code"),b.Sc(65,"uxInfiniteScroll"),b.Zb(),b.Sc(66,' directive can be used to manage paging for a scrollable list of data. Paging can be triggered\n    via a scroll threshold, giving the "infinite scroll" effect, or via user input. Additionally, the optional\n    '),b.ac(67,"code"),b.Sc(68,"uxInfiniteScrollLoading"),b.Zb(),b.Sc(69," and\n    "),b.ac(70,"code"),b.Sc(71,"uxInfiniteScrollLoadButton"),b.Zb(),b.Sc(72,' directives are provided to display a loading indicator and a "Load More" button as\n    required.\n'),b.Zb(),b.Sc(73,"\n\n"),b.ac(74,"h4"),b.Sc(75,"Infinite Scroll"),b.Zb(),b.Sc(76,"\n\n"),b.ac(77,"p"),b.Sc(78,"The\n    "),b.ac(79,"code"),b.Sc(80,"uxInfiniteScroll"),b.Zb(),b.Sc(81," directive has the following configuration properties:"),b.Zb(),b.Sc(82,"\n\n"),b.ac(83,"uxd-api-properties",15),b.Sc(84,"\n    "),b.ac(85,"tr",16),b.Sc(86,"\n        "),b.ac(87,"span"),b.Sc(88,"The callback function which returns a page of data."),b.Zb(),b.Sc(89,"\n        "),b.ac(90,"ul"),b.Sc(91,"\n            "),b.ac(92,"li"),b.Sc(93,"\n                "),b.ac(94,"code"),b.Sc(95,"pageNum: number"),b.Zb(),b.Sc(96," - The index of the requested page, starting from 0."),b.Zb(),b.Sc(97,"\n            "),b.ac(98,"li"),b.Sc(99,"\n                "),b.ac(100,"code"),b.Sc(101,"pageSize: number"),b.Zb(),b.Sc(102," - The number of items requested."),b.Zb(),b.Sc(103,"\n            "),b.ac(104,"li"),b.Sc(105,"\n                "),b.ac(106,"code"),b.Sc(107,"filter: any"),b.Zb(),b.Sc(108," - The filter details as provided via the\n                "),b.ac(109,"code"),b.Sc(110,"filter"),b.Zb(),b.Sc(111," binding."),b.Zb(),b.Sc(112,"\n        "),b.Zb(),b.Sc(113,"\n        "),b.ac(114,"span"),b.Sc(115,"The return value should be either a promise which resolves to an array, or a plain array in case the\n            data can be loaded synchronously. An empty array or an array with fewer than\n            "),b.ac(116,"code"),b.Sc(117,"pageSize"),b.Zb(),b.Sc(118," items can be returned, which indicates that the end of the data set has been reached."),b.Zb(),b.Sc(119,"\n    "),b.Zb(),b.Sc(120,"\n    "),b.ac(121,"tr",17),b.Sc(122,"\n        The collection of items to display in the list. This will be populated by the directive, using the loading function provided,\n        so it should be used in a read-only manner. It is ideally used as the source of a repeater such as\n        "),b.ac(123,"code"),b.Sc(124,"ngFor"),b.Zb(),b.Sc(125,".\n    "),b.Zb(),b.Sc(126,"\n    "),b.ac(127,"tr",18),b.Sc(128,"\n        The filter which is passed into the loading function. It is up to the loading function to interpret this and return data which matches the filter according to the application specification.\n    "),b.Zb(),b.Sc(129,"\n    "),b.ac(130,"tr",19),b.Sc(131,"\n        The number of items to request in a page. This should ideally be more than twice the number of items which fit into the height of the scrolling view, but this is not required.\n    "),b.Zb(),b.Sc(132,"\n    "),b.ac(133,"tr",20),b.Sc(134,'\n        Controls whether additional data is loaded based on the scroll position. If set to true the the list will have the "infinite scroll" effect.\n    '),b.Zb(),b.Sc(135,"\n    "),b.ac(136,"tr",21),b.Sc(137,"\n        The scrollable element which contains the data, if this is different from the element where the\n        "),b.ac(138,"code"),b.Sc(139,"uxInfiniteScroll"),b.Zb(),b.Sc(140," directive is defined. To bind to the window scroll the "),b.ac(141,"code"),b.Sc(142,"scrollElement"),b.Zb(),b.Sc(143,"\n        should be set to "),b.ac(144,"code"),b.Sc(145,"document.documentElement"),b.Zb(),b.Sc(146,".\n    "),b.Zb(),b.Sc(147,"\n"),b.Zb(),b.Sc(148,"\n\n"),b.ac(149,"uxd-api-properties",22),b.Sc(150,"\n    "),b.ac(151,"tr",23),b.Sc(152,"\n        Emits when collection has changed.\n    "),b.Zb(),b.Sc(153,"\n    "),b.ac(154,"tr",24),b.Sc(155,"\n        Raised when a page of data is about to be requested from the loading function. Call\n        "),b.ac(156,"code"),b.Sc(157,"preventDefault()"),b.Zb(),b.Sc(158," on the event to cancel the load.\n    "),b.Zb(),b.Sc(159,"\n    "),b.ac(160,"tr",25),b.Sc(161,"\n        Raised when a page of data has been received and resolved from the loading function.\n    "),b.Zb(),b.Sc(162,"\n    "),b.ac(163,"tr",26),b.Sc(164,"\n        Raised when a promise from the loading function results in an error.\n    "),b.Zb(),b.Sc(165,"\n"),b.Zb(),b.Sc(166,"\n\n"),b.ac(167,"p"),b.Sc(168,"Additionally, the following functions can be called on the directive for custom behavior."),b.Zb(),b.Sc(169,"\n\n"),b.ac(170,"uxd-api-properties"),b.Sc(171,"\n    "),b.ac(172,"tr",27),b.Sc(173,"\n        Loads the next page of data.\n    "),b.Zb(),b.Sc(174,"\n    "),b.ac(175,"tr",28),b.Sc(176,"\n        Clear the collection. Future requests will load from page 0.\n    "),b.Zb(),b.Sc(177,"\n    "),b.ac(178,"tr",29),b.Sc(179,"\n        Call the paging function for each loaded page and update any changed data. The current page and scroll\n        position will be retained.\n    "),b.Zb(),b.Sc(180,"\n    "),b.ac(181,"tr",30),b.Sc(182,"\n        Call the paging function for the specified page index, and update any changed data. The current page and scroll\n        position will be retained.\n    "),b.Zb(),b.Sc(183,"\n"),b.Zb(),b.Sc(184,"\n\n"),b.ac(185,"h4"),b.Sc(186,"Infinite Scroll Loading Indicator"),b.Zb(),b.Sc(187,"\n\n"),b.ac(188,"p"),b.Sc(189,"The\n    "),b.ac(190,"code"),b.Sc(191,"uxInfiniteScrollLoading"),b.Zb(),b.Sc(192," structural directive can be applied to an element to mark it as the loading indicator.\n    This will be displayed whenever the infinite scroll directive is loading data. Note that the loading indicator should\n    be a child of the\n    "),b.ac(193,"code"),b.Sc(194,"uxInfiniteScroll"),b.Zb(),b.Sc(195," element for this directive to function. The\n    "),b.ac(196,"code"),b.Sc(197,"loading"),b.Zb(),b.Sc(198," and\n    "),b.ac(199,"code"),b.Sc(200,"loaded"),b.Zb(),b.Sc(201," events are also available to implement more advanced loading indicators."),b.Zb(),b.Sc(202,"\n\n"),b.ac(203,"p"),b.Sc(204,"See below for an example, and note the asterisk prefix to indicate use of a structural directive."),b.Zb(),b.Sc(205,"\n\n"),b.Vb(206,"uxd-snippet",31),b.Sc(207,"\n\n"),b.ac(208,"h4"),b.Sc(209,"Infinite Scroll Load Button"),b.Zb(),b.Sc(210,"\n\n"),b.ac(211,"p"),b.Sc(212,"The\n    "),b.ac(213,"code"),b.Sc(214,"uxInfiniteScrollLoadButton"),b.Zb(),b.Sc(215," structural directive can be applied to an element to mark it as a clickable button\n    which will load a new page of data into the list. This will be automatically hidden when the control is loading data,\n    or when the data set has been exhausted. Note that the load button should be a child of the\n    "),b.ac(216,"code"),b.Sc(217,"uxInfiniteScroll"),b.Zb(),b.Sc(218," element for this directive to function. The\n    "),b.ac(219,"code"),b.Sc(220,"request"),b.Zb(),b.Sc(221," function on\n    "),b.ac(222,"code"),b.Sc(223,"uxInfiniteScroll"),b.Zb(),b.Sc(224," can also be used to programmatically load pages of data into the list."),b.Zb(),b.Sc(225,"\n\n"),b.ac(226,"p"),b.Sc(227,"See below for an example, and note the asterisk prefix to indicate use of a structural directive."),b.Zb(),b.Sc(228,"\n\n"),b.Vb(229,"uxd-snippet",31),b.Sc(230,"\n\n"),b.ac(231,"h4"),b.Sc(232,"Accessibility"),b.Zb(),b.Sc(233,"\n\n"),b.ac(234,"p"),b.Sc(235,"\n    On the list items, it is important to specify "),b.ac(236,"code"),b.Sc(237,"aria-posinset"),b.Zb(),b.Sc(238," to indicate the position of the item in the\n    overall collection, and "),b.ac(239,"code"),b.Sc(240,"aria-setsize"),b.Zb(),b.Sc(241," to specify the total number of items if known (use the value\n    "),b.ac(242,"code"),b.Sc(243,"-1"),b.Zb(),b.Sc(244," otherwise).\n    Additionally, the example shows use of\n    "),b.ac(245,"a",32),b.ac(246,"code"),b.Sc(247,"LiveAnnouncer"),b.Zb(),b.Zb(),b.Sc(248," to announce the\n    start and end of the loading period.\n"),b.Zb(),b.Sc(249,"\n\n"),b.ac(250,"h4"),b.Sc(251,"Sample Code"),b.Zb(),b.Sc(252,"\n\n"),b.ac(253,"ux-tabset",33),b.Sc(254,"\n    "),b.ac(255,"ux-tab",34),b.Sc(256,"\n        "),b.Vb(257,"uxd-snippet",31),b.Sc(258,"\n    "),b.Zb(),b.Sc(259,"\n    "),b.ac(260,"ux-tab",35),b.Sc(261,"\n        "),b.Vb(262,"uxd-snippet",36),b.Sc(263,"\n    "),b.Zb(),b.Sc(264,"\n    "),b.ac(265,"ux-tab",37),b.Sc(266,"\n        "),b.Vb(267,"uxd-snippet",38),b.Sc(268,"\n    "),b.Zb(),b.Sc(269,"\n"),b.Zb(),b.Sc(270,"\n")),2&n&&(b.Cb(4),b.tc("ngModel",b.oc(5,16,a.filterText)),b.Cb(9),b.tc("uxInfiniteScroll",a.loadCallback)("collection",a.loadedEmployees)("filter",b.oc(14,18,a.debouncedFilterText))("pageSize",a.pageSize)("loadOnScroll",a.loadOnScroll),b.Cb(3),b.Db("aria-busy",a.loading),b.Cb(2),b.tc("ngForOf",a.loadedEmployees),b.Cb(20),b.tc("value",a.loadOnScroll),b.Cb(12),b.tc("value",a.pageSize),b.Cb(156),b.tc("content",a.snippets.compiled.loadingSnippetHtml),b.Cb(23),b.tc("content",a.snippets.compiled.loadMoreSnippetHtml),b.Cb(24),b.tc("minimal",!1),b.Cb(4),b.tc("content",a.snippets.compiled.appHtml),b.Cb(5),b.tc("content",a.snippets.compiled.appTs),b.Cb(5),b.tc("content",a.snippets.compiled.appCss))},directives:[o.a,o.n,o.q,l.Nb,e.s,l.Ob,l.Pb,l.b,l.d,l.n,l.vc,y.a,h.a,f.a,l.N,l.Kd,l.Fd],pipes:[e.b],styles:[".employee-list[_ngcontent-%COMP%]{width:100%;height:250px;overflow-y:auto;border:1px solid #ddd}.employee-list[_ngcontent-%COMP%] > ol[_ngcontent-%COMP%]{list-style:none;margin:0;padding:0}.employee-list[_ngcontent-%COMP%] > ol[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{width:100%}li.employee-item[_ngcontent-%COMP%]{display:flex;padding:10px 20px;border-bottom:1px solid #eee}.employee-details[_ngcontent-%COMP%]{flex:1 0 auto;color:#888}.employee-name[_ngcontent-%COMP%]{color:#000}.employee-department[_ngcontent-%COMP%]{margin-right:1em}.employee-department[_ngcontent-%COMP%], .employee-email[_ngcontent-%COMP%]{font-size:90%;font-weight:300}.employee-load-more[_ngcontent-%COMP%]{width:100%;padding:10px 20px}.employee-loading[_ngcontent-%COMP%]{display:flex;align-items:center;padding:10px 20px;font-style:italic}.employee-loading[_ngcontent-%COMP%] > .spinner[_ngcontent-%COMP%]{margin:0 1em 0 .5em}"]}),a=function(n,a,s,t){var p,e=arguments.length,o=e<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(a,s,o):p(a,s))||o);return e>3&&o&&Object.defineProperty(a,s,o),o}([Object(g.a)("ComponentsInfiniteScrollComponent")],a)}(m.a),O=function(){var n=function(a,s){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])})(a,s)};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),L=function(n,a){var s="function"==typeof Symbol&&n[Symbol.iterator];if(!s)return n;var t,p,e=s.call(n),o=[];try{for(;(void 0===a||a-- >0)&&!(t=e.next()).done;)o.push(t.value)}catch(c){p={error:c}}finally{try{t&&!t.done&&(s=e.return)&&s.call(e)}finally{if(p)throw p.error}}return o};function I(n,a){if(1&n&&(b.ac(0,"tr",20),b.Sc(1,"\n            "),b.ac(2,"td",1),b.Sc(3),b.Zb(),b.Sc(4,"\n            "),b.ac(5,"td"),b.Sc(6),b.Zb(),b.Sc(7,"\n            "),b.ac(8,"td"),b.Sc(9),b.Zb(),b.Sc(10,"\n            "),b.ac(11,"td"),b.Sc(12),b.Zb(),b.Sc(13,"\n        "),b.Zb()),2&n){var s=a.$implicit,t=a.index,p=b.mc();b.tc("key",s.id),b.Db("aria-posinset",t)("aria-setsize",p.employees.length),b.Cb(3),b.Tc(s.id),b.Cb(3),b.Tc(s.name),b.Cb(3),b.Tc(s.email),b.Cb(3),b.Tc(s.department)}}function M(n,a){1&n&&(b.ac(0,"tr",21),b.Sc(1,"\n            "),b.ac(2,"td",22),b.Sc(3,"\n                "),b.Vb(4,"div",23),b.Sc(5,"\n                Loading...\n            "),b.Zb(),b.Sc(6,"\n        "),b.Zb())}function _(n,a){if(1&n){var s=b.bc();b.ac(0,"tr",21),b.Sc(1,"\n            "),b.ac(2,"td",24),b.Sc(3,"\n                "),b.ac(4,"button",25),b.ic("click",(function(){return b.Hc(s),b.mc().loadNextPage()})),b.Sc(5,"\n                    Load More\n                "),b.Zb(),b.Sc(6,"\n            "),b.Zb(),b.Sc(7,"\n        "),b.Zb()}}var P=function(n){function a(){var a=n.call(this,s("7exx"))||this;return a.isLoading=!1,a.employees=[],a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs,"app.component.css":a.snippets.raw.appCss},modules:[{imports:["VirtualScrollModule","FixedHeaderTableModule"],library:"@ux-aspects/ux-aspects"}]},a._page=0,a.load(),a}return O(a,n),a.prototype.load=function(n){var a=this;void 0===n&&(n=0),this.isLoading=!0;for(var s=[],t=1;t<=5e3;t++)s.push({id:t+5e3*n,name:chance.name(),email:chance.email(),department:chance.pickone(["Finance","Operations","Investor Relations","Technical","Auditing","Labs"])});setTimeout((function(){a.employees=function(){for(var n=[],a=0;a<arguments.length;a++)n=n.concat(L(arguments[a]));return n}(a.employees,s),a.isLoading=!1}),1e3)},a.prototype.loadNextPage=function(){this.load(++this._page)},a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=b.Ob({type:a,selectors:[["uxd-components-virtual-for"]],features:[b.zb],decls:129,vars:10,consts:[["uxFixedHeaderTable","",1,"table"],[1,"identity-column"],["uxVirtualForContainer","","uxTabbableList","",3,"wrap"],["uxTabbableListItem","",3,"key",4,"uxVirtualFor","uxVirtualForOf"],["class","virtual-table-action",4,"ngIf"],["routerLink","/components/scrollbar","fragment","virtual-scroll"],["tableTitle","Inputs"],["uxd-api-property","","name","itemSize","type","number"],["tableTitle","Context"],["uxd-api-property","","name","index","type","number"],["uxd-api-property","","name","first","type","boolean"],["uxd-api-property","","name","last","type","boolean"],["uxd-api-property","","name","even","type","boolean"],["uxd-api-property","","name","odd","type","boolean"],["uxd-api-property","","name","count","type","number"],[3,"content"],[3,"minimal"],["heading","HTML"],["heading","TypeScript"],["heading","CSS"],["uxTabbableListItem","",3,"key"],[1,"virtual-table-action"],["colspan","4",1,"virtual-loading-indicator"],[1,"spinner","spinner-accent","spinner-bounce-middle"],["colspan","4",1,"virtual-load-button"],[1,"btn","btn-link","button-primary","btn-block",3,"click"]],template:function(n,a){1&n&&(b.ac(0,"table",0),b.Sc(1,"\n    "),b.ac(2,"thead"),b.Sc(3,"\n        "),b.ac(4,"tr"),b.Sc(5,"\n            "),b.ac(6,"th",1),b.Sc(7,"Id"),b.Zb(),b.Sc(8,"\n            "),b.ac(9,"th"),b.Sc(10,"Name"),b.Zb(),b.Sc(11,"\n            "),b.ac(12,"th"),b.Sc(13,"Email"),b.Zb(),b.Sc(14,"\n            "),b.ac(15,"th"),b.Sc(16,"Department"),b.Zb(),b.Sc(17,"\n        "),b.Zb(),b.Sc(18,"\n    "),b.Zb(),b.Sc(19,"\n\n    "),b.ac(20,"tbody",2),b.Sc(21,"\n\n        "),b.Qc(22,I,14,7,"tr",3),b.Sc(23,"\n\n        "),b.Qc(24,M,7,0,"tr",4),b.Sc(25,"\n\n        "),b.Qc(26,_,8,0,"tr",4),b.Sc(27,"\n\n    "),b.Zb(),b.Sc(28,"\n\n"),b.Zb(),b.Sc(29,"\n\n"),b.Vb(30,"hr"),b.Sc(31,"\n\n"),b.ac(32,"p"),b.Sc(33,"\n    The "),b.ac(34,"code"),b.Sc(35,"uxVirtualFor"),b.Zb(),b.Sc(36," directive is an alternative way of implementing virtual scrolling.\n    It differs from the "),b.ac(37,"a",5),b.Sc(38,"Virtual Scroll"),b.Zb(),b.Sc(39," component as it does not\n    provide a built in support for a load more button or loading additional items on scroll. It is instead intended to be a drop-in\n    replacement for the "),b.ac(40,"code"),b.Sc(41,"ngFor"),b.Zb(),b.Sc(42," directive which allows it to be used in places where the Virtual Scroll component\n    is not suitable, for example, within tables.\n"),b.Zb(),b.Sc(43,"\n\n"),b.ac(44,"p"),b.Sc(45,"\n    The parent element should also be given the "),b.ac(46,"code"),b.Sc(47,"uxVirtualForContainer"),b.Zb(),b.Sc(48," directive.\n"),b.Zb(),b.Sc(49,"\n\n"),b.ac(50,"p"),b.Sc(51,"The following attributes can be used on the "),b.ac(52,"code"),b.Sc(53,"uxVirtualForContainer"),b.Zb(),b.Sc(54," directive:"),b.Zb(),b.Sc(55,"\n\n"),b.ac(56,"uxd-api-properties",6),b.Sc(57,"\n    "),b.ac(58,"tr",7),b.Sc(59,"\n        Define the height of the virtual items (in pixels).\n        If this is not specified, the height of the first item will be used.\n    "),b.Zb(),b.Sc(60,"\n"),b.Zb(),b.Sc(61,"\n\n"),b.ac(62,"p"),b.Sc(63,"\n    The "),b.ac(64,"code"),b.Sc(65,"uxVirtualFor"),b.Zb(),b.Sc(66," directive provides the same context properties available to "),b.ac(67,"code"),b.Sc(68,"ngFor"),b.Zb(),b.Sc(69,":\n"),b.Zb(),b.Sc(70,"\n\n"),b.ac(71,"uxd-api-properties",8),b.Sc(72,"\n    "),b.ac(73,"tr",9),b.Sc(74,"\n        The position of the current item within the list.\n    "),b.Zb(),b.Sc(75,"\n    "),b.ac(76,"tr",10),b.Sc(77,"\n        Indicates whether the item is first in the list.\n    "),b.Zb(),b.Sc(78,"\n    "),b.ac(79,"tr",11),b.Sc(80,"\n        Indicates whether the item is last in the list.\n    "),b.Zb(),b.Sc(81,"\n    "),b.ac(82,"tr",12),b.Sc(83,"\n        Indicates whether the item is in an even position within the list.\n    "),b.Zb(),b.Sc(84,"\n    "),b.ac(85,"tr",13),b.Sc(86,"\n        Indicates whether the item is in an odd position within the list.\n    "),b.Zb(),b.Sc(87,"\n    "),b.ac(88,"tr",14),b.Sc(89,"\n        The number of items in the list.\n    "),b.Zb(),b.Sc(90,"\n"),b.Zb(),b.Sc(91,"\n\n"),b.ac(92,"p"),b.Sc(93,"\n    Context properties can be accessed by assigning them to variables within the template:\n"),b.Zb(),b.Sc(94,"\n\n"),b.Vb(95,"uxd-snippet",15),b.Sc(96,"\n\n"),b.ac(97,"p"),b.Sc(98,"\n    The directive also works seamlessly with observables by using the "),b.ac(99,"code"),b.Sc(100,"async"),b.Zb(),b.Sc(101," pipe, as you would with "),b.ac(102,"code"),b.Sc(103,"ngFor"),b.Zb(),b.Sc(104,":\n"),b.Zb(),b.Sc(105,"\n\n"),b.Vb(106,"uxd-snippet",15),b.Sc(107,"\n\n"),b.ac(108,"p"),b.Sc(109,"The following code can be used to create the example above:"),b.Zb(),b.Sc(110,"\n\n"),b.ac(111,"ux-tabset",16),b.Sc(112,"\n    "),b.ac(113,"ux-tab",17),b.Sc(114,"\n        "),b.Vb(115,"uxd-snippet",15),b.Sc(116,"\n    "),b.Zb(),b.Sc(117,"\n    "),b.ac(118,"ux-tab",18),b.Sc(119,"\n        "),b.Vb(120,"uxd-snippet",15),b.Sc(121,"\n    "),b.Zb(),b.Sc(122,"\n    "),b.ac(123,"ux-tab",19),b.Sc(124,"\n        "),b.Vb(125,"uxd-snippet",15),b.Sc(126,"\n    "),b.Zb(),b.Sc(127,"\n"),b.Zb(),b.Sc(128,"\n")),2&n&&(b.Cb(20),b.tc("wrap",!1),b.Cb(2),b.tc("uxVirtualForOf",a.employees),b.Cb(2),b.tc("ngIf",a.isLoading),b.Cb(2),b.tc("ngIf",!a.isLoading),b.Cb(69),b.tc("content",a.snippets.compiled.contextHtml),b.Cb(11),b.tc("content",a.snippets.compiled.asyncHtml),b.Cb(5),b.tc("minimal",!1),b.Cb(4),b.tc("content",a.snippets.compiled.appHtml),b.Cb(5),b.tc("content",a.snippets.compiled.appTs),b.Cb(5),b.tc("content",a.snippets.compiled.appCss))},directives:[l.lb,l.ke,l.Hd,l.le,e.t,c.h,y.a,h.a,f.a,l.Kd,l.Fd,l.Id,l.N],styles:[".table[_ngcontent-%COMP%] > tbody[_ngcontent-%COMP%]{height:750px}.identity-column[_ngcontent-%COMP%]{width:100px;flex:none}.virtual-loading-indicator[_ngcontent-%COMP%]{text-align:center;justify-content:center;font-style:italic}.virtual-loading-indicator[_ngcontent-%COMP%] > .spinner[_ngcontent-%COMP%]{margin:.3em 1em .3em .5em}.virtual-load-button[_ngcontent-%COMP%]{padding:0}.virtual-load-button[_ngcontent-%COMP%] > .btn[_ngcontent-%COMP%]{height:100%;padding:8px}.virtual-table-action[_ngcontent-%COMP%]:hover{background-color:transparent}"]}),a=function(n,a,s,t){var p,e=arguments.length,o=e<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(a,s,o):p(a,s))||o);return e>3&&o&&Object.defineProperty(a,s,o),o}([Object(g.a)("ComponentsVirtualForComponent")],a)}(m.a),E=s("K9Ia"),F=function(){var n=function(a,s){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])})(a,s)};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}();function z(n,a){if(1&n&&(b.ac(0,"div",21),b.Sc(1,"\n\n        "),b.ac(2,"div",22),b.Sc(3,"\n            "),b.ac(4,"div"),b.Sc(5,"\n                "),b.ac(6,"span",23),b.Sc(7),b.Zb(),b.Sc(8,"\n                "),b.ac(9,"span",24),b.Sc(10),b.Zb(),b.Sc(11,"\n            "),b.Zb(),b.Sc(12,"\n            "),b.ac(13,"div"),b.Sc(14,"\n                "),b.ac(15,"span",25),b.Sc(16),b.Zb(),b.Sc(17,"\n            "),b.Zb(),b.Sc(18,"\n        "),b.Zb(),b.Sc(19,"\n        "),b.ac(20,"div",26),b.Sc(21),b.Zb(),b.Sc(22,"\n\n    "),b.Zb()),2&n){var s=a.cell,t=a.index,p=b.mc();b.Db("aria-setsize",p.totalItems)("aria-posinset",t),b.Cb(7),b.Tc(s.name),b.Cb(3),b.Uc("(",s.department,")"),b.Cb(6),b.Tc(s.email),b.Cb(5),b.Tc(s.id)}}function A(n,a){1&n&&(b.ac(0,"button",27),b.Sc(1,"\n        Load more\n    "),b.Zb())}function V(n,a){1&n&&(b.ac(0,"div",28),b.Sc(1,"\n        "),b.Vb(2,"div",29),b.Sc(3,"\n        "),b.ac(4,"div"),b.Sc(5,"Loading..."),b.Zb(),b.Sc(6,"\n    "),b.Zb())}var j=["Finance","Operations","Investor Relations","Technical","Auditing","Labs"],N=function(n){function a(a){var t=n.call(this,s("uJCl"))||this;return t._liveAnnouncer=a,t.loadOnScroll=!0,t.employees=new E.a,t.loading=!1,t.pageSize=2e3,t.totalPages=10,t.playground={files:{"app.component.html":t.snippets.raw.appHtml,"app.component.ts":t.snippets.raw.appTs,"app.component.css":t.snippets.raw.appCss},modules:[{imports:["VirtualScrollModule","CheckboxModule","AccordionModule"],library:"@ux-aspects/ux-aspects"},{imports:["A11yModule"],library:"@angular/cdk/a11y"}]},t.totalItems=t.pageSize*t.totalPages,t}return F(a,n),a.prototype.loadPage=function(n){var a=this,s=n*this.pageSize,t=s+this.pageSize,p=[];this.loading=!0,this._liveAnnouncer.announce("Loading more items, please wait.");for(var e=s;e<t;e++){var o=chance.name();p.push({id:e,name:o,email:o.toLowerCase().replace(" ",".")+"@business.com",department:chance.pickone(j)})}setTimeout((function(){a.employees.next(p),a.loading=!1,a._liveAnnouncer.announce(p.length+" items loaded."),10===n&&a.employees.complete()}),1e3)},a.\u0275fac=function(n){return new(n||a)(b.Ub(p.e))},a.\u0275cmp=b.Ob({type:a,selectors:[["uxd-components-virtual-scroll"]],features:[b.zb],decls:123,vars:9,consts:[["role","list","aria-label","Employee list with virtual scrolling",1,"virtual-scroll-container",3,"collection","cellHeight","loadOnScroll","loading"],["role","listitem","class","virtual-cell",4,"uxVirtualScrollCell"],["type","button","aria-description","Load more items into the list","class","btn btn-link button-primary virtual-scroll-load-more",4,"uxVirtualScrollLoadButton"],["class","virtual-scroll-loading",4,"uxVirtualScrollLoading"],[1,"uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-6","col-sm-12"],[3,"value","valueChange"],["href","https://material.angular.io/cdk/a11y/api#LiveAnnouncer"],["tableTitle","Inputs"],["uxd-api-property","","name","collection","type","Subject<any[]>"],["uxd-api-property","","name","loadOnScroll","type","boolean","defaultValue","true"],["uxd-api-property","","name","cellHeight","type","number"],["tableTitle","Outputs"],["uxd-api-property","","name","loading","type","number"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],["role","listitem",1,"virtual-cell"],[1,"employee-details"],[1,"employee-name"],[1,"employee-department"],[1,"employee-email"],[1,"employee-id"],["type","button","aria-description","Load more items into the list",1,"btn","btn-link","button-primary","virtual-scroll-load-more"],[1,"virtual-scroll-loading"],[1,"spinner","spinner-accent","spinner-bounce-middle"]],template:function(n,a){1&n&&(b.ac(0,"ux-virtual-scroll",0),b.ic("loading",(function(n){return a.loadPage(n)})),b.Sc(1,"\n\n    "),b.Qc(2,z,23,6,"div",1),b.Sc(3,"\n\n    "),b.Qc(4,A,2,0,"button",2),b.Sc(5,"\n\n    "),b.Qc(6,V,7,0,"div",3),b.Sc(7,"\n\n"),b.Zb(),b.Sc(8,"\n\n"),b.ac(9,"div",4),b.Sc(10,"\n    "),b.ac(11,"ux-accordion"),b.Sc(12,"\n        "),b.ac(13,"ux-accordion-panel",5),b.Sc(14,"\n            "),b.ac(15,"div",6),b.Sc(16,"\n                "),b.ac(17,"div",7),b.Sc(18,"\n                    "),b.ac(19,"ux-checkbox",8),b.ic("valueChange",(function(n){return a.loadOnScroll=n})),b.Sc(20,"loadOnScroll"),b.Zb(),b.Sc(21,"\n                "),b.Zb(),b.Sc(22,"\n            "),b.Zb(),b.Sc(23,"\n        "),b.Zb(),b.Sc(24,"\n    "),b.Zb(),b.Sc(25,"\n"),b.Zb(),b.Sc(26,"\n\n"),b.Vb(27,"hr"),b.Sc(28,"\n\n"),b.ac(29,"p"),b.Sc(30,"\n    The "),b.ac(31,"code"),b.Sc(32,"ux-virtual-scroll"),b.Zb(),b.Sc(33," component is designed to allow you to display a list of many thousands of items without\n    any noticeable performance degradation.\n"),b.Zb(),b.Sc(34,"\n\n"),b.ac(35,"p"),b.Sc(36,"\n    This virtual scroll component is similar to the infinite scroll directive but will be much more performant with large datasets.\n    One limitation of the virtual scroll component is that each cell must be the same height.\n"),b.Zb(),b.Sc(37,"\n\n"),b.ac(38,"p"),b.Sc(39,'\n    The component supports both a "Load More" button and paging on scroll which can be styled using the '),b.ac(40,"code"),b.Sc(41,"*uxVirtualScrollLoadButton"),b.Zb(),b.Sc(42,"\n    structural directive. The loading indicator can also be defined using the "),b.ac(43,"code"),b.Sc(44,"*uxVirtualScrollLoading"),b.Zb(),b.Sc(45," structural directive.\n"),b.Zb(),b.Sc(46,"\n\n"),b.ac(47,"p"),b.Sc(48,"\n    For accessibility, ensure that you apply an appropriate role to the "),b.ac(49,"code"),b.Sc(50,"ux-virtual-scroll"),b.Zb(),b.Sc(51," element and its\n    children. In this example, "),b.ac(52,"code"),b.Sc(53,'role="list"'),b.Zb(),b.Sc(54," and "),b.ac(55,"code"),b.Sc(56,'role="listitem"'),b.Zb(),b.Sc(57," are used respectively. On the\n    cells, specify "),b.ac(58,"code"),b.Sc(59,"aria-posinset"),b.Zb(),b.Sc(60," to indicate the position of the item in the overall collection, and\n    "),b.ac(61,"code"),b.Sc(62,"aria-setsize"),b.Zb(),b.Sc(63," to specify the total number of items if known (use the value "),b.ac(64,"code"),b.Sc(65,"-1"),b.Zb(),b.Sc(66," otherwise).\n    Finally, the example shows use of\n    "),b.ac(67,"a",9),b.ac(68,"code"),b.Sc(69,"LiveAnnouncer"),b.Zb(),b.Zb(),b.Sc(70," to announce the\n    start and end of the loading period.\n"),b.Zb(),b.Sc(71,"\n\n"),b.ac(72,"p"),b.Sc(73,"The following attributes can be used to customize the component:"),b.Zb(),b.Sc(74,"\n\n"),b.ac(75,"uxd-api-properties",10),b.Sc(76,"\n    "),b.ac(77,"tr",11),b.Sc(78,"\n        A subject observable that will emit a page of items to display in the component. When all pages have been loaded, the "),b.ac(79,"code"),b.Sc(80,".complete()"),b.Zb(),b.Sc(81,"\n        function should be called on the observable to prevent the component from trying to load any additional items. If you want to reset the list\n        simply create a new subject instance and the list will remove all current items and request the first page of data.\n    "),b.Zb(),b.Sc(82,"\n    "),b.ac(83,"tr",12),b.Sc(84,"\n        If "),b.ac(85,"code"),b.Sc(86,"true"),b.Zb(),b.Sc(87," the next page of data will be requested when the scrollbar nears the end of the list. If "),b.ac(88,"code"),b.Sc(89,"false"),b.Zb(),b.Sc(90,' a "Load More"\n        button will be displayed at the end of the list allowing the user to request additional items by clicking it.\n    '),b.Zb(),b.Sc(91,"\n    "),b.ac(92,"tr",13),b.Sc(93,"\n        The height of the cells must be specified to allow scrolling to be optimized. Each cell must have the same height. This attribute is mandatory and an error will appear if this value is not defined.\n    "),b.Zb(),b.Sc(94,"\n"),b.Zb(),b.Sc(95,"\n\n"),b.ac(96,"uxd-api-properties",14),b.Sc(97,"\n    "),b.ac(98,"tr",15),b.Sc(99,"\n        This will be called whenever a new page of data is requested. This should be used to provide the component with the next page of data via the subject observable.\n    "),b.Zb(),b.Sc(100,"\n"),b.Zb(),b.Sc(101,"\n\n"),b.ac(102,"p"),b.Sc(103,"The following code can be used to create the example above:"),b.Zb(),b.Sc(104,"\n\n"),b.ac(105,"ux-tabset",16),b.Sc(106,"\n    "),b.ac(107,"ux-tab",17),b.Sc(108,"\n        "),b.Vb(109,"uxd-snippet",18),b.Sc(110,"\n    "),b.Zb(),b.Sc(111,"\n    "),b.ac(112,"ux-tab",19),b.Sc(113,"\n        "),b.Vb(114,"uxd-snippet",18),b.Sc(115,"\n    "),b.Zb(),b.Sc(116,"\n    "),b.ac(117,"ux-tab",20),b.Sc(118,"\n        "),b.Vb(119,"uxd-snippet",18),b.Sc(120,"\n    "),b.Zb(),b.Sc(121,"\n"),b.Zb(),b.Sc(122,"\n")),2&n&&(b.tc("collection",a.employees)("cellHeight",63)("loadOnScroll",a.loadOnScroll),b.Db("aria-busy",a.loading),b.Cb(19),b.tc("value",a.loadOnScroll),b.Cb(86),b.tc("minimal",!1),b.Cb(4),b.tc("content",a.snippets.compiled.appHtml),b.Cb(5),b.tc("content",a.snippets.compiled.appTs),b.Cb(5),b.tc("content",a.snippets.compiled.appCss))},directives:[l.ne,l.me,l.oe,l.pe,l.b,l.d,l.n,l.N,y.a,h.a,l.Kd,l.Fd,f.a],styles:[".virtual-scroll-container[_ngcontent-%COMP%]{width:420px;height:250px;border:1px solid #ddd}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-cell[_ngcontent-%COMP%]{display:flex;padding:10px 20px;border-bottom:1px solid #eee}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-cell[_ngcontent-%COMP%]   .employee-details[_ngcontent-%COMP%]{flex:1 0 auto;color:#888}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-cell[_ngcontent-%COMP%]   .employee-details[_ngcontent-%COMP%]   .employee-name[_ngcontent-%COMP%]{color:#000}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-cell[_ngcontent-%COMP%]   .employee-details[_ngcontent-%COMP%]   .employee-department[_ngcontent-%COMP%]{font-size:90%;font-weight:300;margin-right:1em}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-cell[_ngcontent-%COMP%]   .employee-details[_ngcontent-%COMP%]   .employee-email[_ngcontent-%COMP%]{font-size:90%;font-weight:300}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-scroll-loading[_ngcontent-%COMP%]{display:flex;align-items:center;padding:10px 20px;font-style:italic}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-scroll-loading[_ngcontent-%COMP%] > .spinner[_ngcontent-%COMP%]{margin:0 1em 0 .5em}.virtual-scroll-container[_ngcontent-%COMP%]   .virtual-scroll-load-more[_ngcontent-%COMP%]{width:100%;padding:10px 20px;outline:none}"]}),a=function(n,a,s,t){var p,e=arguments.length,o=e<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(p=n[c])&&(o=(e<3?p(o):e>3?p(a,s,o):p(a,s))||o);return e>3&&o&&Object.defineProperty(a,s,o),o}([Object(g.a)("ComponentsVirtualScrollComponent")],a)}(m.a);s.d(a,"ComponentsScrollbarModule",(function(){return U}));var R=[T,N,P],D=[{path:"**",component:u.a,data:{category:r.b.resolveCategoryData(r.a.Components,"Scrollbar")}}],U=function(){function n(n,a){a.registerResolver(n,R)}return n.\u0275mod=b.Sb({type:n}),n.\u0275inj=b.Rb({factory:function(a){return new(a||n)(b.ec(b.j),b.ec(r.b))},imports:[[p.a,l.a,l.c,l.o,e.c,i.a,l.mb,o.j,l.Qb,l.wc,c.i.forChild(D),l.Ld,l.qe]]}),n}();("undefined"==typeof ngJitMode||ngJitMode)&&b.Mc(U,{declarations:[T,N,P],imports:[p.a,l.a,l.c,l.o,e.c,i.a,l.mb,o.j,l.Qb,l.wc,c.i,l.Ld,l.qe],exports:[T,N,P]})}}]);