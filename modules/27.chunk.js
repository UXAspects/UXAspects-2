(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"+k3F":function(n,a){n.exports={snippet:'<span class="token selector">.date-time-picker-popover</span> <span class="token punctuation">{</span>\n    <span class="token property">max-width</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.date-time-picker-popover .popover-content</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".date-time-picker-popover {\n    max-width: none;\n}\n\n.date-time-picker-popover .popover-content {\n    padding: 0;\n}"}},"7/Qn":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-9 col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span> <span class="token attr-name">[class.has-error]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>invalid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Show Date Picker<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">uxFocusIndicatorOrigin</span>\n                        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popover.show()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>calendar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">#input</span>\n                    <span class="token attr-name">#popover</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ux-popover<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Select a date range<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[ngModel]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">uxFocusIndicatorOrigin</span>\n                    <span class="token attr-name">(ngModelChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onDateChange($event)<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[uxPopover]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popoverTemplate<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[popoverClass]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showNowBtn ? \'date-range-picker-now-btn-popover\' :\n                    \'date-range-picker-popover\'<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected date<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popover.show()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[style.visibility]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date !== \'\' &amp;&amp; date !== undefined &amp;&amp;\n                        date !== null ? \'visible\' : \'hidden\'<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Clear<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#popoverTemplate</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-date-range-picker</span>\n        <span class="token attr-name">[(start)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>start<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[(end)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>end<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showTime]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showTime<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showTimezone]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showTimezone<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showSeconds]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSeconds<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showMeridian]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showMeridian<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showSpinners]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSpinners<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showNowBtn]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showNowBtn<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[startTimezone]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>startTimezone<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[endTimezone]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>endTimezone<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(startChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onRangeChange()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(endChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onRangeChange()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(keydown.escape)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popover.hide(); input.focus()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(startTimezoneChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onTimezoneChange(true, $event)<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(endTimezoneChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onTimezoneChange(false, $event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-date-range-picker</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>',example:'<div class="row">\n    <div class="col-md-9 col-sm-12">\n\n        <div class="input-group" [class.has-error]="invalid">\n            <span class="input-group-btn">\n                <button class="btn button-secondary"\n                        aria-label="Show Date Picker"\n                        uxFocusIndicatorOrigin\n                        (click)="popover.show()">\n                    <ux-icon name="calendar" aria-hidden="true"></ux-icon>\n                </button>\n            </span>\n\n            <input type="text"\n                    #input\n                    #popover="ux-popover"\n                    placeholder="Select a date range"\n                    [ngModel]="date"\n                    uxFocusIndicatorOrigin\n                    (ngModelChange)="onDateChange($event)"\n                    [uxPopover]="popoverTemplate"\n                    placement="bottom"\n                    [popoverClass]="showNowBtn ? \'date-range-picker-now-btn-popover\' :\n                    \'date-range-picker-popover\'"\n                    class="form-control"\n                    aria-label="Selected date"\n                    (keydown.enter)="popover.show()">\n\n            <span class="input-group-btn">\n                <button class="btn button-secondary"\n                        [style.visibility]="date !== \'\' && date !== undefined &&\n                        date !== null ? \'visible\' : \'hidden\'"\n                        aria-label="Clear"\n                        (click)="clear()">\n                    <ux-icon name="close" aria-hidden="true"></ux-icon>\n                </button>\n            </span>\n        </div>\n    </div>\n</div>\n\n<ng-template #popoverTemplate>\n    <ux-date-range-picker\n        [(start)]="start"\n        [(end)]="end"\n        [showTime]="showTime"\n        [showTimezone]="showTimezone"\n        [showSeconds]="showSeconds"\n        [showMeridian]="showMeridian"\n        [showSpinners]="showSpinners"\n        [showNowBtn]="showNowBtn"\n        [startTimezone]="startTimezone"\n        [endTimezone]="endTimezone"\n        (startChange)="onRangeChange()"\n        (endChange)="onRangeChange()"\n        (keydown.escape)="popover.hide(); input.focus()"\n        (startTimezoneChange)="onTimezoneChange(true, $event)"\n        (endTimezoneChange)="onTimezoneChange(false, $event)">\n    </ux-date-range-picker>\n</ng-template>'}},AVdU:function(n,a,s){"use strict";s.d(a,"a",(function(){return t}));var t=function(){return function(n){var a=this;this.snippets={compiled:{},raw:{}},n.keys().forEach((function(s){var t=s.replace("./","").replace(/\W+(\w)/g,(function(n){return n[1].toUpperCase()})),e=n(s);e.snippet&&(a.snippets.compiled[t]=e.snippet),e.example&&(a.snippets.raw[t]=e.example)}))}}()},F29g:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> AfterViewInit<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> ElementRef<span class="token punctuation">,</span> OnDestroy<span class="token punctuation">,</span> ViewChild<span class="token punctuation">,</span> ViewEncapsulation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DateTimePickerTimezone <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> fromEvent<span class="token punctuation">,</span> Subscription <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> debounceTime <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    encapsulation<span class="token operator">:</span> ViewEncapsulation<span class="token punctuation">.</span>None\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword">implements</span> <span class="token class-name">AfterViewInit</span><span class="token punctuation">,</span> OnDestroy <span class="token punctuation">{</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span><span class="token string">\'input\'</span><span class="token punctuation">)</span> dateInput<span class="token operator">:</span> ElementRef<span class="token punctuation">;</span>\n\n    date<span class="token operator">:</span> Date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    timezone<span class="token operator">:</span> DateTimePickerTimezone <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'GMT\'</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    showTime<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    showTimezones<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    showMeridians<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    showSpinners<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    subscription<span class="token operator">:</span> Subscription<span class="token punctuation">;</span>\n\n    <span class="token function">ngAfterViewInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>subscription <span class="token operator">=</span> <span class="token function">fromEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dateInput<span class="token punctuation">.</span>nativeElement<span class="token punctuation">,</span> <span class="token string">\'input\'</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">debounceTime</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">event</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dateInput<span class="token punctuation">.</span>nativeElement<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">ngOnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>subscription<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">parse</span><span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// try and parse the date</span>\n        <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// check if the date is valid</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>date <span class="token operator">=</span> date<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DateTimePickerTimezone } from '@ux-aspects/ux-aspects';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements AfterViewInit, OnDestroy {\n\n    @ViewChild('input') dateInput: ElementRef;\n\n    date: Date = new Date();\n    timezone: DateTimePickerTimezone = { name: 'GMT', offset: 0 };\n\n    showTime: boolean = true;\n    showTimezones: boolean = true;\n    showMeridians: boolean = true;\n    showSpinners: boolean = true;\n    subscription: Subscription;\n\n    ngAfterViewInit(): void {\n        this.subscription = fromEvent(this.dateInput.nativeElement, 'input')\n            .pipe(debounceTime(500))\n            .subscribe(event => this.parse(this.dateInput.nativeElement.value));\n    }\n\n    ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n    }\n\n    parse(value: string): void {\n\n        // try and parse the date\n        const date = new Date(value);\n\n        // check if the date is valid\n        if (!isNaN(date.getDate())) {\n            this.date = date;\n        }\n    }\n}"}},KgGn:function(n,a){n.exports={snippet:'<span class="token selector">.date-range-picker-popover,\n.date-range-picker-now-btn-popover</span> <span class="token punctuation">{</span>\n    <span class="token property">max-width</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.date-range-picker-popover .popover-content</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 4px 24px 24px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.date-range-picker-now-btn-popover .popover-content</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 4px 24px 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".date-range-picker-popover,\n.date-range-picker-now-btn-popover {\n    max-width: none;\n}\n\n.date-range-picker-popover .popover-content {\n    padding: 4px 24px 24px;\n}\n\n.date-range-picker-now-btn-popover .popover-content {\n    padding: 4px 24px 0;\n}"}},Rsaw:function(n,a,s){"use strict";s.r(a);var t,e=s("Valr"),p=s("QJY3"),o=s("DUip"),c=s("7Q8i"),i=s("XtaT"),u=s("T/2f"),l=s("YZ8U"),r=s("AVdU"),k=s("yHOM"),d=s("TYT/"),m=s("+gXg"),h=s("2RDK"),b=s("COk8"),w=(t=function(n,a){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])})(n,a)},function(n,a){function s(){this.constructor=n}t(n,a),n.prototype=null===a?Object.create(a):(s.prototype=a.prototype,new s)});function S(n,a){if(1&n){var s=d.bc();d.Sc(0,"\n    "),d.ac(1,"ux-date-range-picker",56),d.ic("startChange",(function(n){return d.Hc(s),d.mc().start=n}))("endChange",(function(n){return d.Hc(s),d.mc().end=n}))("startChange",(function(){return d.Hc(s),d.mc().onRangeChange()}))("endChange",(function(){return d.Hc(s),d.mc().onRangeChange()}))("keydown.escape",(function(){d.Hc(s),d.mc();var n=d.Dc(16),a=d.Dc(15);return n.hide(),a.focus()}))("startTimezoneChange",(function(n){return d.Hc(s),d.mc().onTimezoneChange(!0,n)}))("endTimezoneChange",(function(n){return d.Hc(s),d.mc().onTimezoneChange(!1,n)})),d.Sc(2,"\n    "),d.Zb(),d.Sc(3,"\n")}if(2&n){var t=d.mc();d.Cb(1),d.tc("start",t.start)("end",t.end)("showTime",t.showTime)("showTimezone",t.showTimezone)("showSeconds",t.showSeconds)("showMeridian",t.showMeridian)("showSpinners",t.showSpinners)("showNowBtn",t.showNowBtn)("startTimezone",t.startTimezone)("endTimezone",t.endTimezone)}}var g=function(n){function a(){var a=n.call(this,s("Wult"))||this;return a.invalid=!1,a.showTime=!1,a.showTimezone=!1,a.showSeconds=!1,a.showMeridian=!0,a.showSpinners=!0,a.showNowBtn=!1,a.startTimezone={name:"GMT",offset:0},a.endTimezone={name:"GMT",offset:0},a.playground={files:{"app.component.ts":a.snippets.raw.appTs,"app.component.css":a.snippets.raw.appCss,"app.component.html":a.snippets.raw.appHtml},modules:[{imports:["DateRangePickerModule","PopoverModule"],library:"@ux-aspects/ux-aspects"}]},a}return w(a,n),a.prototype.onDateChange=function(n){this.invalid=!1;var a=n.indexOf("\u2014")?n.split("\u2014"):n.split("-"),s=Date.parse(a[0].trim()),t=Date.parse(a[1].trim());isNaN(s)?a.length>=1&&isNaN(s)&&(this.invalid=!0,this.start=null):(this.start=new Date(s),this.startTimezone=this.getTimezone(a[0])),isNaN(t)?2===a.length&&isNaN(t)&&(this.invalid=!0,this.end=null):(this.end=new Date(t),this.endTimezone=this.getTimezone(a[1])),this.start&&this.end&&this.start.getTime()>this.end.getTime()&&(this.invalid=!0,this.start=null,this.end=null)},a.prototype.onRangeChange=function(){var n=this.start?Object(e.J)(this.start,"d MMMM y  h:mm a","en-US")+" "+this.startTimezone.name:"",a=this.end?Object(e.J)(this.end,"d MMMM y  h:mm a","en-US")+" "+this.endTimezone.name:"";this.start&&this.end&&(this.invalid=!1,this.getNormalizedDate(this.start,this.startTimezone).getTime()>this.getNormalizedDate(this.end,this.endTimezone).getTime()&&(this.invalid=!0),this.date=n&&a?n+" \u2014 "+a:n||a)},a.prototype.onTimezoneChange=function(n,a){n?this.startTimezone=a:this.endTimezone=a,this.onRangeChange()},a.prototype.clear=function(){this.start=null,this.end=null,this.date=null,this.startTimezone={name:"GMT",offset:0},this.endTimezone={name:"GMT",offset:0},this.onRangeChange()},a.prototype.getTimezone=function(n){var a=n.match(/GMT(\+|-)([0-9]+)/gi);return null===a?{name:"GMT",offset:0}:c.ve.find((function(n){return n.name.toLowerCase()===a[0].trim().toLowerCase()}))||{name:"GMT",offset:0}},a.prototype.getNormalizedDate=function(n,a){var s=new Date(n);return s.setMinutes(s.getMinutes()+a.offset),s},a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=d.Ob({type:a,selectors:[["uxd-components-date-range-picker"]],features:[d.zb],decls:235,vars:21,consts:[[1,"row"],[1,"col-md-9","col-sm-12"],[1,"input-group"],[1,"input-group-btn"],["aria-label","Show Date Picker","uxFocusIndicatorOrigin","",1,"btn","button-secondary",3,"click"],["name","calendar","aria-hidden","true"],["type","text","placeholder","Select a date range","uxFocusIndicatorOrigin","","placement","bottom","aria-label","Selected date",1,"form-control",3,"ngModel","uxPopover","popoverClass","ngModelChange","keydown.enter"],["input","","popover","ux-popover"],["aria-label","Clear",1,"btn","button-secondary",3,"click"],["name","close","aria-hidden","true"],["popoverTemplate",""],[1,"uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-3","col-sm-6"],[3,"value","valueChange"],[3,"disabled","value","valueChange"],["tableTitle","Inputs"],["uxd-api-property","","name","start","type","Date"],["uxd-api-property","","name","end","type","Date"],["uxd-api-property","","name","startTimezone","type","DateTimePickerTimezone"],["uxd-api-property","","name","endTimezone","type","DateTimePickerTimezone"],["uxd-api-property","","name","timezones","type","DateTimePickerTimezone[]"],["uxd-api-property","","name","min","type","Date"],["uxd-api-property","","name","max","type","Date"],["uxd-api-property","","name","showTime","type","boolean","defaultValue","false"],["uxd-api-property","","name","showTimezone","type","boolean","defaultValue","false"],["uxd-api-property","","name","showSeconds","type","boolean","defaultValue","false"],["uxd-api-property","","name","showMeridian","type","boolean","defaultValue","true"],["uxd-api-property","","name","showSpinners","type","boolean","defaultValue","true"],["uxd-api-property","","name","showNowBtn","type","boolean","defaultValue","false"],["uxd-api-property","","name","weekdays","type","string[]","defaultValue","['S', 'M', 'T', 'W', 'T', 'F', 'S']"],["uxd-api-property","","name","meridians","type","string[]","defaultValue","['AM', 'PM']"],["uxd-api-property","","name","months","type","string[]"],["uxd-api-property","","name","monthsShort","type","string[]"],["uxd-api-property","","name","nowBtnText","type","string","defaultValue","Today"],["uxd-api-property","","name","startOfWeek","type","WeekDay","defaultValue","WeekDay.Sunday"],["uxd-api-property","","name","selectStartTitle","type","string","defaultValue","Select Start Date"],["uxd-api-property","","name","selectEndTitle","type","string","defaultValue","Select End Date"],["uxd-api-property","","name","durationTitle","type","(days: number) => string","defaultValue","X days"],["uxd-api-property","","name","nowBtnAriaLabel","type","string","defaultValue","Set date to now"],["uxd-api-property","","name","startPickerAriaLabel","type","string","defaultValue","Selecting the start date"],["uxd-api-property","","name","endPickerAriaLabel","type","string","defaultValue","Selecting the end date"],["uxd-api-property","","name","dateFormat","type","string | (date: Date) => string"],["href","https://angular.io/api/common/DatePipe#pre-defined-format-options"],["uxd-api-property","","name","timeFormat","type","string | (date: Date) => string"],["tableTitle","Outputs"],["uxd-api-property","","name","startChange","type","Date"],["uxd-api-property","","name","endChange","type","Date"],["uxd-api-property","","name","startTimezoneChange","type","DateTimePickerTimezone"],["uxd-api-property","","name","endTimezoneChange","type","DateTimePickerTimezone"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[3,"start","end","showTime","showTimezone","showSeconds","showMeridian","showSpinners","showNowBtn","startTimezone","endTimezone","startChange","endChange","keydown.escape","startTimezoneChange","endTimezoneChange"]],template:function(n,a){if(1&n){var s=d.bc();d.ac(0,"div",0),d.Sc(1,"\n    "),d.ac(2,"div",1),d.Sc(3,"\n\n        "),d.ac(4,"div",2),d.Sc(5,"\n            "),d.ac(6,"span",3),d.Sc(7,"\n                "),d.ac(8,"button",4),d.ic("click",(function(){return d.Hc(s),d.Dc(16).show()})),d.Sc(9,"\n                    "),d.Vb(10,"ux-icon",5),d.Sc(11,"\n                "),d.Zb(),d.Sc(12,"\n            "),d.Zb(),d.Sc(13,"\n\n            "),d.ac(14,"input",6,7),d.ic("ngModelChange",(function(n){return a.onDateChange(n)}))("keydown.enter",(function(){return d.Hc(s),d.Dc(16).show()})),d.Zb(),d.Sc(17,"\n\n            "),d.ac(18,"span",3),d.Sc(19,"\n                "),d.ac(20,"button",8),d.ic("click",(function(){return a.clear()})),d.Sc(21,"\n                    "),d.Vb(22,"ux-icon",9),d.Sc(23,"\n                "),d.Zb(),d.Sc(24,"\n            "),d.Zb(),d.Sc(25,"\n        "),d.Zb(),d.Sc(26,"\n    "),d.Zb(),d.Sc(27,"\n"),d.Zb(),d.Sc(28,"\n\n"),d.Qc(29,S,4,10,"ng-template",null,10,d.Rc),d.Sc(31,"\n\n"),d.ac(32,"ux-accordion",11),d.Sc(33,"\n    "),d.ac(34,"ux-accordion-panel",12),d.Sc(35,"\n        "),d.ac(36,"div",13),d.Sc(37,"\n            "),d.ac(38,"div",14),d.Sc(39,"\n                "),d.ac(40,"ux-checkbox",15),d.ic("valueChange",(function(n){return a.showTime=n})),d.Sc(41,"showTime"),d.Zb(),d.Sc(42,"\n            "),d.Zb(),d.Sc(43,"\n            "),d.ac(44,"div",14),d.Sc(45,"\n                "),d.ac(46,"ux-checkbox",16),d.ic("valueChange",(function(n){return a.showTimezone=n})),d.Sc(47,"showTimezone"),d.Zb(),d.Sc(48,"\n            "),d.Zb(),d.Sc(49,"\n            "),d.ac(50,"div",14),d.Sc(51,"\n                "),d.ac(52,"ux-checkbox",16),d.ic("valueChange",(function(n){return a.showSeconds=n})),d.Sc(53,"showSeconds"),d.Zb(),d.Sc(54,"\n            "),d.Zb(),d.Sc(55,"\n            "),d.ac(56,"div",14),d.Sc(57,"\n                "),d.ac(58,"ux-checkbox",16),d.ic("valueChange",(function(n){return a.showMeridian=n})),d.Sc(59,"showMeridian"),d.Zb(),d.Sc(60,"\n            "),d.Zb(),d.Sc(61,"\n        "),d.Zb(),d.Sc(62,"\n        "),d.ac(63,"div",13),d.Sc(64,"\n            "),d.ac(65,"div",14),d.Sc(66,"\n                "),d.ac(67,"ux-checkbox",16),d.ic("valueChange",(function(n){return a.showSpinners=n})),d.Sc(68,"showSpinners"),d.Zb(),d.Sc(69,"\n            "),d.Zb(),d.Sc(70,"\n            "),d.ac(71,"div",14),d.Sc(72,"\n                "),d.ac(73,"ux-checkbox",15),d.ic("valueChange",(function(n){return a.showNowBtn=n})),d.Sc(74,"showNowBtn"),d.Zb(),d.Sc(75,"\n            "),d.Zb(),d.Sc(76,"\n        "),d.Zb(),d.Sc(77,"\n    "),d.Zb(),d.Sc(78,"\n"),d.Zb(),d.Sc(79,"\n\n"),d.Vb(80,"hr"),d.Sc(81,"\n\n"),d.ac(82,"p"),d.Sc(83,"\n    The "),d.ac(84,"code"),d.Sc(85,"ux-date-range-picker"),d.Zb(),d.Sc(86," component can be used to select a date range. It can be displayed as a standalone component or within\n    a popover.\n"),d.Zb(),d.Sc(87,"\n\n"),d.ac(88,"p"),d.Sc(89,"\n    The following options can be used to configure the appearance and behavior of the component.\n"),d.Zb(),d.Sc(90,"\n\n"),d.ac(91,"uxd-api-properties",17),d.Sc(92,"\n    "),d.ac(93,"tr",18),d.Sc(94,"\n        The selected start date to be displayed in the component.\n    "),d.Zb(),d.Sc(95,"\n    "),d.ac(96,"tr",19),d.Sc(97,"\n        The selected end date to be displayed in the component.\n    "),d.Zb(),d.Sc(98,"\n    "),d.ac(99,"tr",20),d.Sc(100,"\n        Will set the start timezone. If not specified the local timezone will be used.\n    "),d.Zb(),d.Sc(101,"\n    "),d.ac(102,"tr",21),d.Sc(103,"\n        Will set the end timezone. If not specified the local timezone will be used.\n    "),d.Zb(),d.Sc(104,"\n    "),d.ac(105,"tr",22),d.Sc(106,"\n        Defines the list of available timezones. The "),d.ac(107,"code"),d.Sc(108,"DateTimePickerTimezone"),d.Zb(),d.Sc(109," interface specifies that\n        each timezone should be an object with a "),d.ac(110,"code"),d.Sc(111,"name"),d.Zb(),d.Sc(112," property that represents the timezone, eg. "),d.ac(113,"code"),d.Sc(114,"GMT+2"),d.Zb(),d.Sc(115,",\n        and an "),d.ac(116,"code"),d.Sc(117,"offset"),d.Zb(),d.Sc(118," property that represents the number of minutes relative to GMT the timezone is.\n    "),d.Zb(),d.Sc(119,"\n    "),d.ac(120,"tr",23),d.Sc(121,"\n        The earliest selectable date. Note that the time component is relevant, so set the time to 00:00:00 unless a\n        specific minimum time is required.\n    "),d.Zb(),d.Sc(122,"\n    "),d.ac(123,"tr",24),d.Sc(124,"\n        The latest selectable date. Note that the time component is relevant, so set the time to 23:59:59 unless a\n        specific maximum time is required.\n    "),d.Zb(),d.Sc(125,"\n    "),d.ac(126,"tr",25),d.Sc(127,"\n        Defines whether or not the time picker should be visible.\n    "),d.Zb(),d.Sc(128,"\n    "),d.ac(129,"tr",26),d.Sc(130,"\n        Defines whether or not the time picker should allow the user to choose a timezone.\n    "),d.Zb(),d.Sc(131,"\n    "),d.ac(132,"tr",27),d.Sc(133,"\n        Defines whether or not the time picker should allow the user to specify seconds.\n    "),d.Zb(),d.Sc(134,"\n    "),d.ac(135,"tr",28),d.Sc(136,"\n        Defines whether or not the time picker should show an AM/PM button, or time should be represented in 24hr format instead.\n    "),d.Zb(),d.Sc(137,"\n    "),d.ac(138,"tr",29),d.Sc(139,"\n        Defines whether or not the time picker should allow the user to select the time using spinners.\n    "),d.Zb(),d.Sc(140,"\n    "),d.ac(141,"tr",30),d.Sc(142,"\n        Defines whether or not the show now button is visible.\n    "),d.Zb(),d.Sc(143,"\n    "),d.ac(144,"tr",31),d.Sc(145,"\n        If defined will override the weekday names displayed.\n    "),d.Zb(),d.Sc(146,"\n    "),d.ac(147,"tr",32),d.Sc(148,"\n        Defines the labels to show in the meridian (AM/PM) selector.\n    "),d.Zb(),d.Sc(149,"\n    "),d.ac(150,"tr",33),d.Sc(151,"\n        Defines the names of the months.\n    "),d.Zb(),d.Sc(152,"\n    "),d.ac(153,"tr",34),d.Sc(154,"\n        Defines the short names of each month.\n    "),d.Zb(),d.Sc(155,"\n    "),d.ac(156,"tr",35),d.Sc(157,"\n        Defines the text to be displayed in the button used to set the selected time to the current time.\n    "),d.Zb(),d.Sc(158,"\n    "),d.ac(159,"tr",36),d.Sc(160,"\n        Defines the day of the week that should appear in the first column. "),d.ac(161,"code"),d.Sc(162,"WeekDay"),d.Zb(),d.Sc(163," is an enumeration available in "),d.ac(164,"code"),d.Sc(165,"@angular/common"),d.Zb(),d.Sc(166,".\n    "),d.Zb(),d.Sc(167,"\n    "),d.ac(168,"tr",37),d.Sc(169,"\n        Defines the title to display above the start picker.\n    "),d.Zb(),d.Sc(170,"\n    "),d.ac(171,"tr",38),d.Sc(172,"\n        Defines the title to display above the end picker.\n    "),d.Zb(),d.Sc(173,"\n    "),d.ac(174,"tr",39),d.Sc(175,"\n        Defines a function which returns a string indicating the duration of the selected range.\n    "),d.Zb(),d.Sc(176,"\n    "),d.ac(177,"tr",40),d.Sc(178,"\n        Defines the aria label of the now button.\n    "),d.Zb(),d.Sc(179,"\n    "),d.ac(180,"tr",41),d.Sc(181,"\n        Defines the aria-live announcement when a date in the start picker is focused.\n    "),d.Zb(),d.Sc(182,"\n    "),d.ac(183,"tr",42),d.Sc(184,"\n        Defines the aria-live announcement when a date in the end picker is focused.\n    "),d.Zb(),d.Sc(185,"\n    "),d.ac(186,"tr",43),d.Sc(187,"\n        Allows formatting of the start/end date strings. The pre-defined date formats can be found at\n        "),d.ac(188,"a",44),d.Sc(189,"Date Pipe"),d.Zb(),d.Sc(190," format\n        options.\n    "),d.Zb(),d.Sc(191,"\n    "),d.ac(192,"tr",45),d.Sc(193,"\n        Allows formatting of the start/end time strings. The pre-defined time formats can be found at\n        "),d.ac(194,"a",44),d.Sc(195,"Date Pipe"),d.Zb(),d.Sc(196," format\n        options.\n    "),d.Zb(),d.Sc(197,"\n"),d.Zb(),d.Sc(198,"\n\n"),d.ac(199,"uxd-api-properties",46),d.Sc(200,"\n    "),d.ac(201,"tr",47),d.Sc(202,"\n        Emits an event when the start date is changed.\n    "),d.Zb(),d.Sc(203,"\n    "),d.ac(204,"tr",48),d.Sc(205,"\n        Emits an event when the end date is changed.\n    "),d.Zb(),d.Sc(206,"\n    "),d.ac(207,"tr",49),d.Sc(208,"\n        Emits an event when the start timezone changes.\n    "),d.Zb(),d.Sc(209,"\n    "),d.ac(210,"tr",50),d.Sc(211,"\n        Emits an event when the end timezone changes.\n    "),d.Zb(),d.Sc(212,"\n"),d.Zb(),d.Sc(213,"\n\n"),d.ac(214,"p"),d.Sc(215,"The following code can be used to create the example above:"),d.Zb(),d.Sc(216,"\n\n"),d.ac(217,"ux-tabset",51),d.Sc(218,"\n    "),d.ac(219,"ux-tab",52),d.Sc(220,"\n        "),d.Vb(221,"uxd-snippet",53),d.Sc(222,"\n    "),d.Zb(),d.Sc(223,"\n    "),d.ac(224,"ux-tab",54),d.Sc(225,"\n        "),d.Vb(226,"uxd-snippet",53),d.Sc(227,"\n    "),d.Zb(),d.Sc(228,"\n    "),d.ac(229,"ux-tab",55),d.Sc(230,"\n        "),d.Vb(231,"uxd-snippet",53),d.Sc(232,"\n    "),d.Zb(),d.Sc(233,"\n"),d.Zb(),d.Sc(234,"\n")}if(2&n){var t=d.Dc(30);d.Cb(4),d.Kb("has-error",a.invalid),d.Cb(10),d.tc("ngModel",a.date)("uxPopover",t)("popoverClass",a.showNowBtn?"date-range-picker-now-btn-popover":"date-range-picker-popover"),d.Cb(6),d.Pc("visibility",""!==a.date&&null!=a.date?"visible":"hidden"),d.Cb(20),d.tc("value",a.showTime),d.Cb(6),d.tc("disabled",!a.showTime)("value",a.showTimezone),d.Cb(6),d.tc("disabled",!a.showTime)("value",a.showSeconds),d.Cb(6),d.tc("disabled",!a.showTime)("value",a.showMeridian),d.Cb(9),d.tc("disabled",!a.showTime)("value",a.showSpinners),d.Cb(6),d.tc("value",a.showNowBtn),d.Cb(144),d.tc("minimal",!1),d.Cb(4),d.tc("content",a.snippets.compiled.appHtml),d.Cb(5),d.tc("content",a.snippets.compiled.appTs),d.Cb(5),d.tc("content",a.snippets.compiled.appCss)}},directives:[c.N,c.zb,c.Lb,p.a,p.n,p.q,c.Ic,c.b,c.d,c.n,m.a,h.a,c.Kd,c.Fd,b.a,c.J],styles:[".date-range-picker-now-btn-popover,.date-range-picker-popover{max-width:none}.date-range-picker-popover .popover-content{padding:4px 24px 24px}.date-range-picker-now-btn-popover .popover-content{padding:4px 24px 0}"],encapsulation:2}),a=function(n,a,s,t){var e,p=arguments.length,o=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,s,o):e(a,s))||o);return p>3&&o&&Object.defineProperty(a,s,o),o}([Object(k.a)("ComponentsDateRangePickerComponent")],a)}(r.a),f=s("bne5"),v=s("Gi3i"),y=function(){var n=function(a,s){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])})(a,s)};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),x=["input"];function T(n,a){if(1&n){var s=d.bc();d.Sc(0,"\n    "),d.ac(1,"ux-date-time-picker",43),d.ic("dateChange",(function(n){return d.Hc(s),d.mc().date=n}))("timezoneChange",(function(n){return d.Hc(s),d.mc().timezone=n}))("keydown.escape",(function(){d.Hc(s),d.mc();var n=d.Dc(16),a=d.Dc(15);return n.hide(),a.focus()})),d.Sc(2,"\n    "),d.Zb(),d.Sc(3,"\n")}if(2&n){var t=d.mc();d.Cb(1),d.tc("date",t.date)("timezone",t.timezone)("showTime",t.showTime)("showMeridian",t.showMeridians)("showSpinners",t.showSpinners)("showTimezone",t.showTimezones)}}var z=function(n){function a(){var a=n.call(this,s("SX0m"))||this;return a.date=new Date,a.timezone={name:"GMT",offset:0},a.showTime=!0,a.showTimezones=!0,a.showMeridians=!0,a.showSpinners=!0,a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs,"app.component.css":a.snippets.raw.appCss},modules:[{imports:["DateTimePickerModule","CheckboxModule","PopoverModule","AccordionModule"],library:"@ux-aspects/ux-aspects"}]},a}return y(a,n),a.prototype.ngAfterViewInit=function(){var n=this;this.subscription=Object(f.a)(this.dateInput.nativeElement,"input").pipe(Object(v.a)(500)).subscribe((function(){return n.parse(n.dateInput.nativeElement.value)}))},a.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},a.prototype.parse=function(n){var a=new Date(n);isNaN(a.getDate())||(this.date=a)},a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=d.Ob({type:a,selectors:[["uxd-components-date-time-picker"]],viewQuery:function(n,a){var s;1&n&&d.Oc(x,!0),2&n&&d.Cc(s=d.jc())&&(a.dateInput=s.first)},features:[d.zb],decls:239,vars:18,consts:[[1,"row"],[1,"col-sm-6","col-xs-12"],[1,"input-group","date","m-nil"],[1,"input-group-btn"],["aria-label","Show Date Picker",1,"btn","button-secondary",3,"click"],["name","calendar","aria-hidden","true"],["type","text","uxFocusIndicatorOrigin","","placement","bottom","popoverClass","date-time-picker-popover","aria-label","Selected date",1,"form-control",3,"ngModel","uxPopover","keydown.enter"],["input","","popover","ux-popover"],[1,"m-t"],["popoverTemplate",""],[1,"row","uxd-customize-example"],[1,"col-md-12"],["heading","Customize Example...",1,"accordion-chevron"],[1,"col-md-3"],[3,"ngModel","ngModelChange"],["tableTitle","Inputs"],["uxd-api-property","","name","date","type","Date"],["uxd-api-property","","name","timezone","type","DateTimePickerTimezone"],["uxd-api-property","","name","timezones","type","DateTimePickerTimezone[]"],["uxd-api-property","","name","showDate","type","boolean"],["uxd-api-property","","name","showTime","type","boolean"],["uxd-api-property","","name","showTimezone","type","boolean"],["uxd-api-property","","name","showSeconds","type","boolean"],["uxd-api-property","","name","showMeridian","type","boolean"],["uxd-api-property","","name","showSpinners","type","boolean"],["uxd-api-property","","name","weekdays","type","string[]"],["uxd-api-property","","name","meridians","type","string[]"],["uxd-api-property","","name","months","type","string[]"],["uxd-api-property","","name","monthsShort","type","string[]"],["uxd-api-property","","name","nowBtnText","type","string"],["uxd-api-property","","name","startOfWeek","type","WeekDay","defaultValue","WeekDay.Sunday"],["uxd-api-property","","name","min","type","Date"],["uxd-api-property","","name","max","type","Date"],["tableTitle","Outputs"],["uxd-api-property","","name","dateChange","type","Date"],["uxd-api-property","","name","timezoneChange","type","DateTimePickerTimezone"],["tableTitle","DateTimePickerConfig"],["uxd-api-property","","name","nowBtnAriaLabel","type","string","defaultValue","Set date to now"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"],["heading","CSS"],[3,"date","timezone","showTime","showMeridian","showSpinners","showTimezone","dateChange","timezoneChange","keydown.escape"]],template:function(n,a){if(1&n){var s=d.bc();d.ac(0,"div",0),d.Sc(1,"\n    "),d.ac(2,"div",1),d.Sc(3,"\n        "),d.ac(4,"div",2),d.Sc(5,"\n            "),d.ac(6,"span",3),d.Sc(7,"\n                "),d.ac(8,"button",4),d.ic("click",(function(){return d.Hc(s),d.Dc(16).show()})),d.Sc(9,"\n                    "),d.Vb(10,"ux-icon",5),d.Sc(11,"\n                "),d.Zb(),d.Sc(12,"\n            "),d.Zb(),d.Sc(13,"\n            "),d.ac(14,"input",6,7),d.ic("keydown.enter",(function(){return d.Hc(s),d.Dc(16).show()})),d.nc(17,"date"),d.Zb(),d.Sc(18,"\n        "),d.Zb(),d.Sc(19,"\n\n        "),d.ac(20,"p",8),d.Sc(21,"Selected date is:  "),d.ac(22,"em"),d.Sc(23),d.nc(24,"date"),d.Zb(),d.Zb(),d.Sc(25,"\n    "),d.Zb(),d.Sc(26,"\n"),d.Zb(),d.Sc(27,"\n\n"),d.Qc(28,T,4,6,"ng-template",null,9,d.Rc),d.Sc(30,"\n\n"),d.Vb(31,"hr"),d.Sc(32,"\n\n"),d.ac(33,"div",10),d.Sc(34,"\n    "),d.ac(35,"div",11),d.Sc(36,"\n        "),d.ac(37,"ux-accordion"),d.Sc(38,"\n            "),d.ac(39,"ux-accordion-panel",12),d.Sc(40,"\n                "),d.ac(41,"div",0),d.Sc(42,"\n                    "),d.ac(43,"div",13),d.Sc(44,"\n                        "),d.ac(45,"ux-checkbox",14),d.ic("ngModelChange",(function(n){return a.showTime=n})),d.Sc(46,"Show Time"),d.Zb(),d.Sc(47,"\n                    "),d.Zb(),d.Sc(48,"\n                    "),d.ac(49,"div",13),d.Sc(50,"\n                        "),d.ac(51,"ux-checkbox",14),d.ic("ngModelChange",(function(n){return a.showTimezones=n})),d.Sc(52,"Show Timezones"),d.Zb(),d.Sc(53,"\n                    "),d.Zb(),d.Sc(54,"\n                    "),d.ac(55,"div",13),d.Sc(56,"\n                        "),d.ac(57,"ux-checkbox",14),d.ic("ngModelChange",(function(n){return a.showMeridians=n})),d.Sc(58,"Show Meridians"),d.Zb(),d.Sc(59,"\n                    "),d.Zb(),d.Sc(60,"\n                    "),d.ac(61,"div",13),d.Sc(62,"\n                        "),d.ac(63,"ux-checkbox",14),d.ic("ngModelChange",(function(n){return a.showSpinners=n})),d.Sc(64,"Show Spinners"),d.Zb(),d.Sc(65,"\n                    "),d.Zb(),d.Sc(66,"\n                "),d.Zb(),d.Sc(67,"\n            "),d.Zb(),d.Sc(68,"\n        "),d.Zb(),d.Sc(69,"\n    "),d.Zb(),d.Sc(70,"\n"),d.Zb(),d.Sc(71,"\n\n"),d.Vb(72,"hr"),d.Sc(73,"\n\n"),d.ac(74,"p"),d.Sc(75,"\n    The "),d.ac(76,"code"),d.Sc(77,"ux-date-time-picker"),d.Zb(),d.Sc(78," component can be used to select a date/time or timezone. It can be displayed as a standalone component or within\n    a popover.\n"),d.Zb(),d.Sc(79,"\n\n"),d.ac(80,"p"),d.Sc(81,"\n    The following options can be used to configure the appearance and behavior of the component.\n"),d.Zb(),d.Sc(82,"\n\n"),d.ac(83,"uxd-api-properties",15),d.Sc(84,"\n    "),d.ac(85,"tr",16),d.Sc(86,"\n        The selected date to be displayed in the component.\n    "),d.Zb(),d.Sc(87,"\n    "),d.ac(88,"tr",17),d.Sc(89,"\n        Will set the selected timezone.\n    "),d.Zb(),d.Sc(90,"\n    "),d.ac(91,"tr",18),d.Sc(92,"\n        Defines the list of available timezones. The "),d.ac(93,"b"),d.Sc(94,"DateTimePickerTimezone"),d.Zb(),d.Sc(95," interface specifies that\n        each timezone should be an object with a "),d.ac(96,"b"),d.Sc(97,"name"),d.Zb(),d.Sc(98," property that represents the timezone, eg. "),d.ac(99,"code"),d.Sc(100,"GMT+2"),d.Zb(),d.Sc(101,",\n        and an "),d.ac(102,"b"),d.Sc(103,"offset"),d.Zb(),d.Sc(104," property that represents the number of minutes relative to GMT the timezone is.\n    "),d.Zb(),d.Sc(105,"\n    "),d.ac(106,"tr",19),d.Sc(107,"\n        Defines whether or not the date picker should be visible.\n    "),d.Zb(),d.Sc(108,"\n    "),d.ac(109,"tr",20),d.Sc(110,"\n        Defines whether or not the time picker should be visible.\n    "),d.Zb(),d.Sc(111,"\n    "),d.ac(112,"tr",21),d.Sc(113,"\n        Defines whether or not the time picker should allow the user to choose a timezone.\n    "),d.Zb(),d.Sc(114,"\n    "),d.ac(115,"tr",22),d.Sc(116,"\n        Defines whether or not the time picker should allow the user to specify seconds.\n    "),d.Zb(),d.Sc(117,"\n    "),d.ac(118,"tr",23),d.Sc(119,"\n        Defines whether or not the time picker should show an AM/PM button, or time should be represented in 24hr format instead.\n    "),d.Zb(),d.Sc(120,"\n    "),d.ac(121,"tr",24),d.Sc(122,"\n        Defines whether or not the time picker should allow the user to select the time using spinners.\n    "),d.Zb(),d.Sc(123,"\n    "),d.ac(124,"tr",25),d.Sc(125,"\n        If defined will override the weekday names displayed.\n    "),d.Zb(),d.Sc(126,"\n    "),d.ac(127,"tr",26),d.Sc(128,"\n        Defines the labels to show in the meridian (AM/PM) selector.\n    "),d.Zb(),d.Sc(129,"\n    "),d.ac(130,"tr",27),d.Sc(131,"\n        Defines the names of the months.\n    "),d.Zb(),d.Sc(132,"\n    "),d.ac(133,"tr",28),d.Sc(134,"\n        Defines the short names of each month.\n    "),d.Zb(),d.Sc(135,"\n    "),d.ac(136,"tr",29),d.Sc(137,"\n        Defines the text to be displayed in the button used to set the selected time to the current time.\n    "),d.Zb(),d.Sc(138,"\n    "),d.ac(139,"tr",30),d.Sc(140,"\n        Defines the day of the week that should appear in the first column. "),d.ac(141,"code"),d.Sc(142,"WeekDay"),d.Zb(),d.Sc(143," is an enumeration available in "),d.ac(144,"code"),d.Sc(145,"@angular/common"),d.Zb(),d.Sc(146,".\n    "),d.Zb(),d.Sc(147,"\n    "),d.ac(148,"tr",31),d.Sc(149,"\n        Defines the earliest date that can be selected.\n    "),d.Zb(),d.Sc(150,"\n    "),d.ac(151,"tr",32),d.Sc(152,"\n        Defines the latest date that can be selected.\n    "),d.Zb(),d.Sc(153,"\n"),d.Zb(),d.Sc(154,"\n\n"),d.ac(155,"uxd-api-properties",33),d.Sc(156,"\n    "),d.ac(157,"tr",34),d.Sc(158,"\n        Emits an event when the date is changed using the component.\n    "),d.Zb(),d.Sc(159,"\n    "),d.ac(160,"tr",35),d.Sc(161,"\n        If not defined the picker will try to use the user's timezone. If that is not available, it will revert to GMT.\n    "),d.Zb(),d.Sc(162,"\n"),d.Zb(),d.Sc(163,"\n\n"),d.ac(164,"p"),d.Sc(165,"\n    To provide default settings for all date pickers within you application, import "),d.ac(166,"code"),d.Sc(167,"DateTimePickerModule.forRoot()"),d.Zb(),d.Sc(168," in your "),d.ac(169,"code"),d.Sc(170,"app.module.ts"),d.Zb(),d.Sc(171,".\n    You can then inject the "),d.ac(172,"code"),d.Sc(173,"DateTimePickerConfig"),d.Zb(),d.Sc(174," and configure the default presentation and localization settings for every date picker\n    within your application.\n"),d.Zb(),d.Sc(175,"\n\n"),d.ac(176,"uxd-api-properties",36),d.Sc(177,"\n    "),d.ac(178,"tr",19),d.Sc(179,"\n        Defines whether or not the date picker should be visible.\n    "),d.Zb(),d.Sc(180,"\n    "),d.ac(181,"tr",20),d.Sc(182,"\n        Defines whether or not the time picker should be visible.\n    "),d.Zb(),d.Sc(183,"\n    "),d.ac(184,"tr",21),d.Sc(185,"\n        Defines whether or not the time picker should allow the user to choose a timezone.\n    "),d.Zb(),d.Sc(186,"\n    "),d.ac(187,"tr",22),d.Sc(188,"\n        Defines whether or not the time picker should allow the user to specify seconds.\n    "),d.Zb(),d.Sc(189,"\n    "),d.ac(190,"tr",23),d.Sc(191,"\n        Defines whether or not the time picker should show an AM/PM button, or time should be represented in 24hr format instead.\n    "),d.Zb(),d.Sc(192,"\n    "),d.ac(193,"tr",24),d.Sc(194,"\n        Defines whether or not the time picker should allow the user to select the time using spinners.\n    "),d.Zb(),d.Sc(195,"\n    "),d.ac(196,"tr",25),d.Sc(197,"\n        If defined will override the weekday names displayed.\n    "),d.Zb(),d.Sc(198,"\n    "),d.ac(199,"tr",29),d.Sc(200,"\n        Defines the text to be displayed in the button used to set the selected time to the current time.\n    "),d.Zb(),d.Sc(201,"\n    "),d.ac(202,"tr",18),d.Sc(203,"\n        Defines the timezones that can be selected.\n    "),d.Zb(),d.Sc(204,"\n    "),d.ac(205,"tr",26),d.Sc(206,"\n        Defines the labels to show in the meridian (AM/PM) selector.\n    "),d.Zb(),d.Sc(207,"\n    "),d.ac(208,"tr",27),d.Sc(209,"\n        Defines the names of the months.\n    "),d.Zb(),d.Sc(210,"\n    "),d.ac(211,"tr",28),d.Sc(212,"\n        Defines the short names of each month.\n    "),d.Zb(),d.Sc(213,"\n    "),d.ac(214,"tr",37),d.Sc(215,"\n        Defines the aria label of the now button.\n    "),d.Zb(),d.Sc(216,"\n"),d.Zb(),d.Sc(217,"\n\n"),d.ac(218,"p"),d.Sc(219,"The following code can be used to create the example above:"),d.Zb(),d.Sc(220,"\n\n"),d.ac(221,"ux-tabset",38),d.Sc(222,"\n    "),d.ac(223,"ux-tab",39),d.Sc(224,"\n        "),d.Vb(225,"uxd-snippet",40),d.Sc(226,"\n    "),d.Zb(),d.Sc(227,"\n    "),d.ac(228,"ux-tab",41),d.Sc(229,"\n        "),d.Vb(230,"uxd-snippet",40),d.Sc(231,"\n    "),d.Zb(),d.Sc(232,"\n    "),d.ac(233,"ux-tab",42),d.Sc(234,"\n        "),d.Vb(235,"uxd-snippet",40),d.Sc(236,"\n    "),d.Zb(),d.Sc(237,"\n"),d.Zb(),d.Sc(238,"\n")}if(2&n){var t=d.Dc(29);d.Cb(14),d.tc("ngModel",d.pc(17,12,a.date,"dd MMMM yyyy HH:mm"))("uxPopover",t),d.Cb(9),d.Vc("",d.pc(24,15,a.date,"dd MMMM yyyy HH:mm")," ",null==a.timezone?null:a.timezone.name,""),d.Cb(22),d.tc("ngModel",a.showTime),d.Cb(6),d.tc("ngModel",a.showTimezones),d.Cb(6),d.tc("ngModel",a.showMeridians),d.Cb(6),d.tc("ngModel",a.showSpinners),d.Cb(158),d.tc("minimal",!1),d.Cb(4),d.tc("content",a.snippets.compiled.appHtml),d.Cb(5),d.tc("content",a.snippets.compiled.appTs),d.Cb(5),d.tc("content",a.snippets.compiled.appCss)}},directives:[c.N,c.Lb,p.a,c.zb,p.n,p.q,c.Ic,c.b,c.d,c.n,m.a,h.a,c.Kd,c.Fd,b.a,c.L],pipes:[e.f],styles:[".date-time-picker-popover{max-width:none}.date-time-picker-popover .popover-content{padding:0}"],encapsulation:2}),a=function(n,a,s,t){var e,p=arguments.length,o=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,s,o):e(a,s))||o);return p>3&&o&&Object.defineProperty(a,s,o),o}([Object(k.a)("ComponentsDateTimePickerComponent")],a)}(r.a),D=function(){var n=function(a,s){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,a){n.__proto__=a}||function(n,a){for(var s in a)a.hasOwnProperty(s)&&(n[s]=a[s])})(a,s)};return function(a,s){function t(){this.constructor=a}n(a,s),a.prototype=null===s?Object.create(s):(t.prototype=s.prototype,new t)}}(),M=function(n){function a(){var a=n.call(this,s("SqLd"))||this;return a.playground={files:{"app.component.html":a.snippets.raw.appHtml,"app.component.ts":a.snippets.raw.appTs},modules:[{imports:["TimePickerModule"],library:"@ux-aspects/ux-aspects"}]},a.value=new Date,a.showMeridian=!0,a.showHours=!0,a.showMinutes=!0,a.showSeconds=!1,a.showSpinners=!0,a.hourStep=1,a.minuteStep=1,a.secondStep=1,a.disabled=!1,a}return D(a,n),a.\u0275fac=function(n){return new(n||a)},a.\u0275cmp=d.Ob({type:a,selectors:[["uxd-time-picker"]],features:[d.zb],decls:176,vars:25,consts:[[3,"value","showMeridian","showHours","showMinutes","showSeconds","showSpinners","hourStep","minuteStep","secondStep","disabled","valueChange"],[1,"uxd-customize-example"],["heading","Customize Example...",1,"accordion-chevron"],[1,"row","uxd-customize-row"],[1,"col-md-4","col-sm-6"],["id","showHours",3,"value","valueChange"],["id","showMinutes",3,"value","valueChange"],["id","showSeconds",3,"value","valueChange"],[3,"value","valueChange"],[1,"col-md-2","col-sm-3"],["for","hourStep"],["id","hourStep",1,"number-picker-compact",3,"value","min","valueChange"],["for","minuteStep"],["id","minuteStep",1,"number-picker-compact",3,"value","min","valueChange"],["for","secondStep"],["id","secondStep",1,"number-picker-compact",3,"value","min","valueChange"],["tableTitle","Inputs"],["uxd-api-property","","name","value","type","Date"],["uxd-api-property","","name","showHours","type","boolean","defaultValue","true"],["uxd-api-property","","name","showMinutes","type","boolean","defaultValue","true"],["uxd-api-property","","name","showSeconds","type","boolean","defaultValue","false"],["uxd-api-property","","name","showMeridian","type","boolean","defaultValue","true"],["uxd-api-property","","name","showSpinners","type","boolean","defaultValue","true"],["uxd-api-property","","name","hourStep","type","number","defaultValue","1"],["uxd-api-property","","name","minuteStep","type","number","defaultValue","1"],["uxd-api-property","","name","secondStep","type","number","defaultValue","1"],["uxd-api-property","","name","min","type","Date"],["uxd-api-property","","name","max","type","Date"],["uxd-api-property","","name","meridians","type","string[]","defaultValue","['AM', 'PM']"],["uxd-api-property","","name","arrowkeys","type","boolean","defaultValue","true"],["uxd-api-property","","name","mousewheel","type","boolean","defaultValue","true"],["uxd-api-property","","name","disabled","type","boolean","defaultValue","false"],["tableTitle","Outputs"],["uxd-api-property","","name","valueChange","type","Date"],["uxd-api-property","","name","isValid","type","boolean"],[3,"minimal"],["heading","HTML"],[3,"content"],["heading","TypeScript"]],template:function(n,a){1&n&&(d.ac(0,"ux-time-picker",0),d.ic("valueChange",(function(n){return a.value=n})),d.Sc(1,"\n"),d.Zb(),d.Sc(2,"\n\n"),d.ac(3,"ux-accordion",1),d.Sc(4,"\n    "),d.ac(5,"ux-accordion-panel",2),d.Sc(6,"\n        "),d.ac(7,"div",3),d.Sc(8,"\n            "),d.ac(9,"div",4),d.Sc(10,"\n                "),d.ac(11,"ux-checkbox",5),d.ic("valueChange",(function(n){return a.showHours=n})),d.Sc(12,"showHours"),d.Zb(),d.Sc(13,"\n            "),d.Zb(),d.Sc(14,"\n            "),d.ac(15,"div",4),d.Sc(16,"\n                "),d.ac(17,"ux-checkbox",6),d.ic("valueChange",(function(n){return a.showMinutes=n})),d.Sc(18,"showMinutes"),d.Zb(),d.Sc(19,"\n            "),d.Zb(),d.Sc(20,"\n            "),d.ac(21,"div",4),d.Sc(22,"\n                "),d.ac(23,"ux-checkbox",7),d.ic("valueChange",(function(n){return a.showSeconds=n})),d.Sc(24,"showSeconds"),d.Zb(),d.Sc(25,"\n            "),d.Zb(),d.Sc(26,"\n        "),d.Zb(),d.Sc(27,"\n        "),d.ac(28,"div",3),d.Sc(29,"\n            "),d.ac(30,"div",4),d.Sc(31,"\n                "),d.ac(32,"ux-checkbox",8),d.ic("valueChange",(function(n){return a.showMeridian=n})),d.Sc(33,"showMeridian"),d.Zb(),d.Sc(34,"\n            "),d.Zb(),d.Sc(35,"\n            "),d.ac(36,"div",4),d.Sc(37,"\n                "),d.ac(38,"ux-checkbox",8),d.ic("valueChange",(function(n){return a.showSpinners=n})),d.Sc(39,"showSpinners"),d.Zb(),d.Sc(40,"\n            "),d.Zb(),d.Sc(41,"\n        "),d.Zb(),d.Sc(42,"\n        "),d.ac(43,"div",3),d.Sc(44,"\n            "),d.ac(45,"div",9),d.Sc(46,"\n                "),d.ac(47,"label",10),d.Sc(48,"hourStep"),d.Zb(),d.Sc(49,"\n            "),d.Zb(),d.Sc(50,"\n            "),d.ac(51,"div",9),d.Sc(52,"\n                "),d.ac(53,"ux-number-picker",11),d.ic("valueChange",(function(n){return a.hourStep=n})),d.Zb(),d.Sc(54,"\n            "),d.Zb(),d.Sc(55,"\n            "),d.ac(56,"div",9),d.Sc(57,"\n                "),d.ac(58,"label",12),d.Sc(59,"minuteStep"),d.Zb(),d.Sc(60,"\n            "),d.Zb(),d.Sc(61,"\n            "),d.ac(62,"div",9),d.Sc(63,"\n                "),d.ac(64,"ux-number-picker",13),d.ic("valueChange",(function(n){return a.minuteStep=n})),d.Zb(),d.Sc(65,"\n            "),d.Zb(),d.Sc(66,"\n            "),d.ac(67,"div",9),d.Sc(68,"\n                "),d.ac(69,"label",14),d.Sc(70,"secondStep"),d.Zb(),d.Sc(71,"\n            "),d.Zb(),d.Sc(72,"\n            "),d.ac(73,"div",9),d.Sc(74,"\n                "),d.ac(75,"ux-number-picker",15),d.ic("valueChange",(function(n){return a.secondStep=n})),d.Zb(),d.Sc(76,"\n            "),d.Zb(),d.Sc(77,"\n        "),d.Zb(),d.Sc(78,"\n        "),d.ac(79,"div",3),d.Sc(80,"\n            "),d.ac(81,"div",4),d.Sc(82,"\n                "),d.ac(83,"ux-checkbox",8),d.ic("valueChange",(function(n){return a.disabled=n})),d.Sc(84,"disabled"),d.Zb(),d.Sc(85,"\n            "),d.Zb(),d.Sc(86,"\n        "),d.Zb(),d.Sc(87,"\n    "),d.Zb(),d.Sc(88,"\n"),d.Zb(),d.Sc(89,"\n\n"),d.Vb(90,"hr"),d.Sc(91,"\n\n"),d.ac(92,"p"),d.Sc(93,"\n    The "),d.ac(94,"code"),d.Sc(95,"ux-time-picker"),d.Zb(),d.Sc(96," component can be used to select the time component of a "),d.ac(97,"code"),d.Sc(98,"Date"),d.Zb(),d.Sc(99," object.\n"),d.Zb(),d.Sc(100,"\n\n"),d.ac(101,"p"),d.Sc(102,"\n    The following options can be used to configure the appearance and behavior of the component.\n"),d.Zb(),d.Sc(103,"\n\n"),d.ac(104,"uxd-api-properties",16),d.Sc(105,"\n    "),d.ac(106,"tr",17),d.Sc(107,"\n        The value to display.\n    "),d.Zb(),d.Sc(108,"\n    "),d.ac(109,"tr",18),d.Sc(110,"\n        Whether to show the hour selector.\n    "),d.Zb(),d.Sc(111,"\n    "),d.ac(112,"tr",19),d.Sc(113,"\n        Whether to show the minute selector.\n    "),d.Zb(),d.Sc(114,"\n    "),d.ac(115,"tr",20),d.Sc(116,"\n        Whether to show the second selector.\n    "),d.Zb(),d.Sc(117,"\n    "),d.ac(118,"tr",21),d.Sc(119,"\n        Whether to show the meridian (AM/PM) selector. If this is false, the 24-hour clock will be used.\n    "),d.Zb(),d.Sc(120,"\n    "),d.ac(121,"tr",22),d.Sc(122,"\n        Whether to show increment and decrement buttons in the time picker.\n    "),d.Zb(),d.Sc(123,"\n    "),d.ac(124,"tr",23),d.Sc(125,"\n        The number of hours to increment or decrement by when using the spinner buttons, arrow keys, or mouse scroll wheel.\n    "),d.Zb(),d.Sc(126,"\n    "),d.ac(127,"tr",24),d.Sc(128,"\n        The number of minutes to increment or decrement by when using the spinner buttons, arrow keys, or mouse scroll wheel.\n    "),d.Zb(),d.Sc(129,"\n    "),d.ac(130,"tr",25),d.Sc(131,"\n        The number of seconds to increment or decrement by when using the spinner buttons, arrow keys, or mouse scroll wheel.\n    "),d.Zb(),d.Sc(132,"\n    "),d.ac(133,"tr",26),d.Sc(134,"\n        The minimum value that the component will allow.\n    "),d.Zb(),d.Sc(135,"\n    "),d.ac(136,"tr",27),d.Sc(137,"\n        The maximum value that the component will allow.\n    "),d.Zb(),d.Sc(138,"\n    "),d.ac(139,"tr",28),d.Sc(140,"\n        An array containing the labels to show in the meridian selector.\n    "),d.Zb(),d.Sc(141,"\n    "),d.ac(142,"tr",29),d.Sc(143,"\n        Whether the arrow keys can be used to increment or decrement the selected time component.\n    "),d.Zb(),d.Sc(144,"\n    "),d.ac(145,"tr",30),d.Sc(146,"\n        Whether the mouse scroll wheel can be used to increment or decrement the selected time component.\n    "),d.Zb(),d.Sc(147,"\n    "),d.ac(148,"tr",31),d.Sc(149,"\n        Whether the control is disabled.\n    "),d.Zb(),d.Sc(150,"\n"),d.Zb(),d.Sc(151,"\n\n"),d.ac(152,"uxd-api-properties",32),d.Sc(153,"\n    "),d.ac(154,"tr",33),d.Sc(155,"\n        Emitted when the "),d.ac(156,"code"),d.Sc(157,"value"),d.Zb(),d.Sc(158," changes.\n    "),d.Zb(),d.Sc(159,"\n    "),d.ac(160,"tr",34),d.Sc(161,"\n        Emitted when the validity of the control changes.\n    "),d.Zb(),d.Sc(162,"\n"),d.Zb(),d.Sc(163,"\n\n"),d.ac(164,"ux-tabset",35),d.Sc(165,"\n    "),d.ac(166,"ux-tab",36),d.Sc(167,"\n        "),d.Vb(168,"uxd-snippet",37),d.Sc(169,"\n    "),d.Zb(),d.Sc(170,"\n    "),d.ac(171,"ux-tab",38),d.Sc(172,"\n        "),d.Vb(173,"uxd-snippet",37),d.Sc(174,"\n    "),d.Zb(),d.Sc(175,"\n"),d.Zb()),2&n&&(d.tc("value",a.value)("showMeridian",a.showMeridian)("showHours",a.showHours)("showMinutes",a.showMinutes)("showSeconds",a.showSeconds)("showSpinners",a.showSpinners)("hourStep",a.hourStep)("minuteStep",a.minuteStep)("secondStep",a.secondStep)("disabled",a.disabled),d.Cb(11),d.tc("value",a.showHours),d.Cb(6),d.tc("value",a.showMinutes),d.Cb(6),d.tc("value",a.showSeconds),d.Cb(9),d.tc("value",a.showMeridian),d.Cb(6),d.tc("value",a.showSpinners),d.Cb(15),d.tc("value",a.hourStep)("min",1),d.Cb(11),d.tc("value",a.minuteStep)("min",1),d.Cb(11),d.tc("value",a.secondStep)("min",1),d.Cb(8),d.tc("value",a.disabled),d.Cb(81),d.tc("minimal",!1),d.Cb(4),d.tc("content",a.snippets.compiled.appHtml),d.Cb(5),d.tc("content",a.snippets.compiled.appTs))},directives:[c.Od,c.b,c.d,c.n,c.vc,m.a,h.a,c.Kd,c.Fd,b.a],encapsulation:2}),a=function(n,a,s,t){var e,p=arguments.length,o=p<3?a:null===t?t=Object.getOwnPropertyDescriptor(a,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,a,s,t);else for(var c=n.length-1;c>=0;c--)(e=n[c])&&(o=(p<3?e(o):p>3?e(a,s,o):e(a,s))||o);return p>3&&o&&Object.defineProperty(a,s,o),o}([Object(k.a)("ComponentsTimePickerComponent")],a)}(r.a);s.d(a,"ComponentsDateTimePickerModule",(function(){return P}));var Z=[z,M,g],C=[{path:"**",component:u.a,data:{category:l.b.resolveCategoryData(l.a.Components,"Date & Time Pickers")}}],P=function(){function n(n,a){a.registerResolver(n,Z)}return n.\u0275mod=d.Sb({type:n}),n.\u0275inj=d.Rb({factory:function(a){return new(a||n)(d.ec(d.j),d.ec(l.b))},imports:[[c.a,c.c,c.o,e.c,c.K,c.M,i.a,p.j,c.Mb,c.wc,c.Jc,o.i.forChild(C),c.Ld,c.Pd]]}),n}();("undefined"==typeof ngJitMode||ngJitMode)&&d.Mc(P,{declarations:[z,M,g],imports:[c.a,c.c,c.o,e.c,c.K,c.M,i.a,p.j,c.Mb,c.wc,c.Jc,o.i,c.Ld,c.Pd],exports:[z,M,g]})},SX0m:function(n,a,s){var t={"./app.css":"+k3F","./app.html":"two2","./app.ts":"F29g"};function e(n){var a=p(n);return s(a)}function p(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}e.keys=function(){return Object.keys(t)},e.resolve=p,n.exports=e,e.id="SX0m"},SqLd:function(n,a,s){var t={"./app.html":"Ts02","./app.ts":"dGs2"};function e(n){var a=p(n);return s(a)}function p(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}e.keys=function(){return Object.keys(t)},e.resolve=p,n.exports=e,e.id="SqLd"},Ts02:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-time-picker</span> <span class="token attr-name">[(value)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[showMeridian]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showMeridian<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[showHours]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showHours<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[showMinutes]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showMinutes<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[showSeconds]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSeconds<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[showSpinners]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSpinners<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[hourStep]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hourStep<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[minuteStep]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>minuteStep<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[secondStep]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>secondStep<span class="token punctuation">"</span></span>\n    <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-time-picker</span><span class="token punctuation">></span></span>',example:'<ux-time-picker [(value)]="value"\n    [showMeridian]="showMeridian"\n    [showHours]="showHours"\n    [showMinutes]="showMinutes"\n    [showSeconds]="showSeconds"\n    [showSpinners]="showSpinners"\n    [hourStep]="hourStep"\n    [minuteStep]="minuteStep"\n    [secondStep]="secondStep"\n    [disabled]="disabled">\n</ux-time-picker>'}},VKt7:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> formatDate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/common\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewEncapsulation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> DateTimePickerTimezone<span class="token punctuation">,</span> timezones <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    encapsulation<span class="token operator">:</span> ViewEncapsulation<span class="token punctuation">.</span>None\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">/** The date in the left side of the date range picker */</span>\n    start<span class="token operator">:</span> Date<span class="token punctuation">;</span>\n\n    <span class="token comment">/** The date in the right side of the date range picker */</span>\n    end<span class="token operator">:</span> Date<span class="token punctuation">;</span>\n\n    <span class="token comment">/** The formatted date string to display in the input */</span>\n    date<span class="token operator">:</span> string<span class="token punctuation">;</span>\n\n    <span class="token comment">/** Indicate whether or not the selected date is valid */</span>\n    invalid<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Indicate if the time picker should be visible */</span>\n    showTime<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Indicate if the timezone picker should be visible */</span>\n    showTimezone<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Indicate if the seconds on the time picker should be visible */</span>\n    showSeconds<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Indicate if the meridian on the time picker should be visible */</span>\n    showMeridian<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Indicate if the spinners on the time picker should be visible */</span>\n    showSpinners<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Indicate if the show now should be visible */</span>\n    showNowBtn<span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Store the currently selected start timezone */</span>\n    startTimezone<span class="token operator">:</span> DateTimePickerTimezone <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'GMT\'</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Store the currently selected end timezone */</span>\n    endTimezone<span class="token operator">:</span> DateTimePickerTimezone <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'GMT\'</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/** Parse a date string when the input changes */</span>\n    <span class="token function">onDateChange</span><span class="token punctuation">(</span>date<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// reset any invalid state</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>invalid <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// check if the date contains a hyphen</span>\n        <span class="token keyword">const</span> parts <span class="token operator">=</span> <span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">\'\u2014\'</span><span class="token punctuation">)</span> <span class="token operator">?</span> date<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'\u2014\'</span><span class="token punctuation">)</span> <span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'-\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> startDate <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> endDate <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>startDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>startDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>startTimezone <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTimezone</span><span class="token punctuation">(</span>parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>parts<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>startDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>invalid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>endDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>endDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>endTimezone <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTimezone</span><span class="token punctuation">(</span>parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>parts<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>endDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>invalid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>start<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>end<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>invalid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/** Update the date string when the date range changes */</span>\n    <span class="token function">onRangeChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">?</span>\n            <span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span> <span class="token string">\'d MMMM y  h:mm a\'</span><span class="token punctuation">,</span> <span class="token string">\'en-US\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startTimezone<span class="token punctuation">.</span>name <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> end <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">?</span>\n            <span class="token function">formatDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>end<span class="token punctuation">,</span> <span class="token string">\'d MMMM y  h:mm a\'</span><span class="token punctuation">,</span> <span class="token string">\'en-US\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>endTimezone<span class="token punctuation">.</span>name <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// reset the invalid state</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>invalid <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// check if the dates are valid</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNormalizedDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startTimezone<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNormalizedDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>end<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>endTimezone<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>invalid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// concatenate the two dates</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>date <span class="token operator">=</span> start <span class="token operator">&amp;&amp;</span> end <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u2014 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>end<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> start <span class="token operator">||</span> end<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">onTimezoneChange</span><span class="token punctuation">(</span>isStart<span class="token operator">:</span> boolean<span class="token punctuation">,</span> timezone<span class="token operator">:</span> DateTimePickerTimezone<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>isStart<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>startTimezone <span class="token operator">=</span> timezone<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>endTimezone <span class="token operator">=</span> timezone<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onRangeChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>startTimezone <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'GMT\'</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>endTimezone <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'GMT\'</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onRangeChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token function">getTimezone</span><span class="token punctuation">(</span>date<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> DateTimePickerTimezone <span class="token punctuation">{</span>\n\n        <span class="token comment">// get the timezone from the datestring</span>\n        <span class="token keyword">const</span> timezone <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/GMT(\\+|-)([0-9]+)/gi</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// check if there is a matching timezone</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>timezone <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'GMT\'</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> match <span class="token operator">=</span> timezones<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">_timezone</span> <span class="token operator">=></span>\n                _timezone<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> timezone<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> match <span class="token operator">?</span> match <span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">\'GMT\'</span><span class="token punctuation">,</span> offset<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/** Account for the timezone offset */</span>\n    <span class="token keyword">private</span> <span class="token function">getNormalizedDate</span><span class="token punctuation">(</span>date<span class="token operator">:</span> Date<span class="token punctuation">,</span> timezone<span class="token operator">:</span> DateTimePickerTimezone<span class="token punctuation">)</span><span class="token operator">:</span> Date <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> normalizedDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        normalizedDate<span class="token punctuation">.</span><span class="token function">setMinutes</span><span class="token punctuation">(</span>normalizedDate<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> timezone<span class="token punctuation">.</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> normalizedDate<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { formatDate } from '@angular/common';\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DateTimePickerTimezone, timezones } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n    /** The date in the left side of the date range picker */\n    start: Date;\n\n    /** The date in the right side of the date range picker */\n    end: Date;\n\n    /** The formatted date string to display in the input */\n    date: string;\n\n    /** Indicate whether or not the selected date is valid */\n    invalid: boolean = false;\n\n    /** Indicate if the time picker should be visible */\n    showTime: boolean = false;\n\n    /** Indicate if the timezone picker should be visible */\n    showTimezone: boolean = false;\n\n    /** Indicate if the seconds on the time picker should be visible */\n    showSeconds: boolean = false;\n\n    /** Indicate if the meridian on the time picker should be visible */\n    showMeridian: boolean = true;\n\n    /** Indicate if the spinners on the time picker should be visible */\n    showSpinners: boolean = true;\n\n    /** Indicate if the show now should be visible */\n    showNowBtn: boolean = false;\n\n    /** Store the currently selected start timezone */\n    startTimezone: DateTimePickerTimezone = { name: 'GMT', offset: 0 };\n\n    /** Store the currently selected end timezone */\n    endTimezone: DateTimePickerTimezone = { name: 'GMT', offset: 0 };\n\n    /** Parse a date string when the input changes */\n    onDateChange(date: string): void {\n\n        // reset any invalid state\n        this.invalid = false;\n\n        // check if the date contains a hyphen\n        const parts = (date.indexOf('\u2014') ? date.split('\u2014') : date.split('-'));\n        const startDate = Date.parse(parts[0].trim());\n        const endDate = Date.parse(parts[1].trim());\n\n        if (!isNaN(startDate)) {\n            this.start = new Date(startDate);\n            this.startTimezone = this.getTimezone(parts[0]);\n        } else if (parts.length >= 1 && isNaN(startDate)) {\n            this.invalid = true;\n            this.start = null;\n        }\n\n        if (!isNaN(endDate)) {\n            this.end = new Date(endDate);\n            this.endTimezone = this.getTimezone(parts[1]);\n        } else if (parts.length === 2 && isNaN(endDate)) {\n            this.invalid = true;\n            this.end = null;\n        }\n\n        if (this.start && this.end && this.start.getTime() > this.end.getTime()) {\n            this.invalid = true;\n            this.start = null;\n            this.end = null;\n        }\n    }\n\n    /** Update the date string when the date range changes */\n    onRangeChange(): void {\n        const start = this.start ?\n            formatDate(this.start, 'd MMMM y  h:mm a', 'en-US') + ' ' + this.startTimezone.name : '';\n        const end = this.end ?\n            formatDate(this.end, 'd MMMM y  h:mm a', 'en-US') + ' ' + this.endTimezone.name : '';\n\n        if (!this.start || !this.end) {\n            return;\n        }\n\n        // reset the invalid state\n        this.invalid = false;\n\n        // check if the dates are valid\n        if (this.getNormalizedDate(this.start, this.startTimezone).getTime() >\n            this.getNormalizedDate(this.end, this.endTimezone).getTime()) {\n            this.invalid = true;\n        }\n\n        // concatenate the two dates\n        this.date = start && end ? `${start} \u2014 ${end}` : start || end;\n    }\n\n    onTimezoneChange(isStart: boolean, timezone: DateTimePickerTimezone): void {\n        if (isStart) {\n            this.startTimezone = timezone;\n        } else {\n            this.endTimezone = timezone;\n        }\n\n        this.onRangeChange();\n    }\n\n    clear(): void {\n        this.start = null;\n        this.end = null;\n        this.date = null;\n        this.startTimezone = { name: 'GMT', offset: 0 };\n        this.endTimezone = { name: 'GMT', offset: 0 };\n        this.onRangeChange();\n    }\n\n    private getTimezone(date: string): DateTimePickerTimezone {\n\n        // get the timezone from the datestring\n        const timezone = date.match(/GMT(\\+|-)([0-9]+)/gi);\n\n        // check if there is a matching timezone\n        if (timezone === null) {\n            return { name: 'GMT', offset: 0 };\n        } else {\n            const match = timezones.find(_timezone =>\n                _timezone.name.toLowerCase() === timezone[0].trim().toLowerCase());\n            return match ? match : { name: 'GMT', offset: 0 };\n        }\n    }\n\n    /** Account for the timezone offset */\n    private getNormalizedDate(date: Date, timezone: DateTimePickerTimezone): Date {\n        const normalizedDate = new Date(date);\n        normalizedDate.setMinutes(normalizedDate.getMinutes() + timezone.offset);\n        return normalizedDate;\n    }\n}"}},Wult:function(n,a,s){var t={"./app.css":"KgGn","./app.html":"7/Qn","./app.ts":"VKt7"};function e(n){var a=p(n);return s(a)}function p(n){if(!s.o(t,n)){var a=new Error("Cannot find module '"+n+"'");throw a.code="MODULE_NOT_FOUND",a}return t[n]}e.keys=function(){return Object.keys(t)},e.resolve=p,n.exports=e,e.id="Wult"},dGs2:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token operator">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token operator">:</span> <span class="token string">\'app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n    value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    showMeridian <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    showHours <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    showMinutes <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    showSeconds <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    showSpinners <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    hourStep <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    minuteStep <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    secondStep <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n    value = new Date();\n    showMeridian = true;\n    showHours = true;\n    showMinutes = true;\n    showSeconds = false;\n    showSpinners = true;\n    hourStep = 1;\n    minuteStep = 1;\n    secondStep = 1;\n    disabled = false;\n}"}},two2:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-6 col-xs-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group date m-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Show Date Picker<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popover.show()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>calendar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-icon</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                <span class="token attr-name">#input</span>\n                <span class="token attr-name">#popover</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ux-popover<span class="token punctuation">"</span></span>\n                <span class="token attr-name">uxFocusIndicatorOrigin</span>\n                <span class="token attr-name">[ngModel]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date | date:\'dd MMMM yyyy HH:mm\'<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[uxPopover]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popoverTemplate<span class="token punctuation">"</span></span>\n                <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span>\n                <span class="token attr-name">popoverClass</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date-time-picker-popover<span class="token punctuation">"</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected date<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(keydown.enter)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popover.show()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-t<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Selected date is:\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>{{ date | date:\'dd MMMM yyyy HH:mm\' }} {{ timezone?.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#popoverTemplate</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-date-time-picker</span>\n        <span class="token attr-name">[(date)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[(timezone)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>timezone<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showTime]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showTime<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showMeridian]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showMeridians<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showSpinners]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSpinners<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[showTimezone]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showTimezones<span class="token punctuation">"</span></span>\n        <span class="token attr-name">(keydown.escape)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>popover.hide(); input.focus()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-date-time-picker</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row uxd-customize-example<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-accordion-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>accordion-chevron<span class="token punctuation">"</span></span> <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Customize Example...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showTime<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Show Time<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showTimezones<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Show Timezones<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showMeridians<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Show Meridians<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-checkbox</span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showSpinners<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Show Spinners<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-checkbox</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion-panel</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-accordion</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\n    <div class="col-sm-6 col-xs-12">\n        <div class="input-group date m-nil">\n            <span class="input-group-btn">\n                <button class="btn button-secondary" aria-label="Show Date Picker" (click)="popover.show()">\n                    <ux-icon name="calendar" aria-hidden="true"></ux-icon>\n                </button>\n            </span>\n            <input type="text"\n                #input\n                #popover="ux-popover"\n                uxFocusIndicatorOrigin\n                [ngModel]="date | date:\'dd MMMM yyyy HH:mm\'"\n                [uxPopover]="popoverTemplate"\n                placement="bottom"\n                popoverClass="date-time-picker-popover"\n                class="form-control"\n                aria-label="Selected date"\n                (keydown.enter)="popover.show()">\n        </div>\n\n        <p class="m-t">Selected date is:\n            <em>{{ date | date:\'dd MMMM yyyy HH:mm\' }} {{ timezone?.name }}</em>\n        </p>\n    </div>\n</div>\n\n<ng-template #popoverTemplate>\n    <ux-date-time-picker\n        [(date)]="date"\n        [(timezone)]="timezone"\n        [showTime]="showTime"\n        [showMeridian]="showMeridians"\n        [showSpinners]="showSpinners"\n        [showTimezone]="showTimezones"\n        (keydown.escape)="popover.hide(); input.focus()">\n    </ux-date-time-picker>\n</ng-template>\n\n<hr>\n\n<div class="row uxd-customize-example">\n    <div class="col-md-12">\n        <ux-accordion>\n            <ux-accordion-panel class="accordion-chevron" heading="Customize Example...">\n                <div class="row">\n                    <div class="col-md-3">\n                        <ux-checkbox [(ngModel)]="showTime">Show Time</ux-checkbox>\n                    </div>\n                    <div class="col-md-3">\n                        <ux-checkbox [(ngModel)]="showTimezones">Show Timezones</ux-checkbox>\n                    </div>\n                    <div class="col-md-3">\n                        <ux-checkbox [(ngModel)]="showMeridians">Show Meridians</ux-checkbox>\n                    </div>\n                    <div class="col-md-3">\n                        <ux-checkbox [(ngModel)]="showSpinners">Show Spinners</ux-checkbox>\n                    </div>\n                </div>\n            </ux-accordion-panel>\n        </ux-accordion>\n    </div>\n</div>'}}}]);